{"version":3,"sources":["views/ui-elements/advance/AdvanceRangeSlider.js","components/Widgets/Statistic/Notification.js"],"names":["Range","createSliderWithTooltip","Slider","Handle","handle","props","value","dragging","index","restProps","prefixCls","overlay","visible","placement","marks","style","color","label","ControlledRangeDisableAcross","useState","setValue","className","onChange","allowCross","AdvanceRangeSlider","Fragment","sm","message","link","md","xl","Header","Title","as","Body","defaultValue","min","step","included","max","tipFormatter","disabled","dots","pushable","count","trackStyle","backgroundColor","handleStyle","railStyle","borderColor","borderBottomColor","vertical","Notification","variant","Link","href","target"],"mappings":"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","file":"static/js/172.238d6651.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\n\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\nconst Range = createSliderWithTooltip(Slider.Range);\nconst Handle = Slider.Handle;\n\nconst handle = (props) => {\n    const { value, dragging, index, ...restProps } = props;\n    return (\n        <Tooltip prefixCls=\"rc-slider-tooltip\" overlay={value} visible={dragging} placement=\"top\" key={index}>\n            <Handle value={value} {...restProps} />\n        </Tooltip>\n    );\n};\n\nconst marks = {\n    '-10': '-10°C',\n    0: <strong>0°C</strong>,\n    26: '26°C',\n    37: '37°C',\n    50: '50°C',\n    100: {\n        style: {\n            color: 'red'\n        },\n        label: <strong>100°C</strong>\n    }\n};\n\nconst ControlledRangeDisableAcross = (props) => {\n    const [value, setValue] = useState([20, 40, 60, 80]);\n\n    const handleChange = (value) => {\n        setValue(value);\n    };\n\n    return <Range className=\"pc-range-slider\" value={value} onChange={handleChange} allowCross={false} {...props} />;\n};\n\nconst AdvanceRangeSlider = () => {\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://www.npmjs.com/package/rc-slider\"\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Basic Slider</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider className=\"pc-range-slider\" defaultValue={20} handle={handle} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Slider with fixed values</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider\n                                className=\"pc-range-slider\"\n                                min={10}\n                                defaultValue={40}\n                                marks={{ 10: 10, 40: 40, 75: 75, 100: 100 }}\n                                step={null}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Slider with <code>marks</code>, <code>step=null</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider className=\"pc-range-slider\" min={-10} marks={marks} step={null} defaultValue={20} handle={handle} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Slider with <code>marks</code>, <code>step</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider className=\"pc-range-slider\" min={-10} marks={marks} step={10} defaultValue={20} handle={handle} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Slider with <code>marks</code>, <code>included=false</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider\n                                className=\"pc-range-slider\"\n                                min={-10}\n                                marks={marks}\n                                included={false}\n                                defaultValue={20}\n                                handle={handle}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Slider with <code>marks</code>, <code>step</code>, <code>included=false</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider\n                                className=\"pc-range-slider\"\n                                min={-10}\n                                marks={marks}\n                                step={10}\n                                included={false}\n                                defaultValue={20}\n                                handle={handle}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Range with custom handle</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range\n                                className=\"pc-range-slider\"\n                                min={0}\n                                max={20}\n                                defaultValue={[3, 10]}\n                                tipFormatter={(value) => `${value}%`}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>allowCross=false</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range className=\"pc-range-slider\" allowCross={false} defaultValue={[0, 20]} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>step=20</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range className=\"pc-range-slider\" step={20} defaultValue={[20, 20]} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>disabled</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range className=\"pc-range-slider\" allowCross={false} defaultValue={[0, 20]} disabled />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>marks</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider.Range\n                                className=\"pc-range-slider\"\n                                min={-10}\n                                marks={marks}\n                                defaultValue={[20, 25, 30, 40]}\n                                handle={handle}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>marks</code>, <code>step</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider.Range\n                                className=\"pc-range-slider\"\n                                min={-10}\n                                marks={marks}\n                                step={10}\n                                defaultValue={[20, 25, 30, 40]}\n                                handle={handle}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>dots</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range className=\"pc-range-slider\" dots step={20} defaultValue={[20, 40]} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>controller</code>, <code>allowCross=false</code>, <code>pushable={'{5}'}</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <ControlledRangeDisableAcross pushable={5} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Range with <code>min={'{45}'}</code>, <code>max={'{115}'}</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range className=\"pc-range-slider\" defaultValue={[56, 82]} min={45} max={115} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Multi Range with <code>trackStyle</code>, <code>handleStyle</code>, <code>railStyle</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Range\n                                className=\"pc-range-slider\"\n                                count={3}\n                                defaultValue={[20, 40, 60, 80]}\n                                pushable\n                                trackStyle={[{ backgroundColor: 'red' }, { backgroundColor: 'green' }]}\n                                handleStyle={[{ backgroundColor: 'yellow' }, { backgroundColor: 'gray' }]}\n                                railStyle={{ backgroundColor: 'black' }}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">\n                                Slider with <code>className</code> like <code>square-handler</code>, <code>triangle-handler</code>\n                            </Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider className=\"pc-range-slider square-handler\" defaultValue={20} handle={handle} />\n                            <hr />\n                            <Slider className=\"pc-range-slider triangle-handler\" defaultValue={50} handle={handle} />\n                            <hr />\n                            <Slider defaultValue={36} handle={handle} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Color Slider</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Slider\n                                className=\"pc-range-slider square-handler\"\n                                defaultValue={20}\n                                handle={handle}\n                                trackStyle={[{ backgroundColor: '#ffaba5' }]}\n                                handleStyle={[{ backgroundColor: '#fb0000', borderColor: '#fb0000' }]}\n                            />\n                            <hr />\n                            <Slider\n                                className=\"pc-range-slider triangle-handler\"\n                                defaultValue={50}\n                                handle={handle}\n                                trackStyle={[{ backgroundColor: '#ffff9c' }]}\n                                handleStyle={[{ borderBottomColor: '#000' }]}\n                            />\n                            <hr />\n                            <Slider\n                                defaultValue={36}\n                                handle={handle}\n                                trackStyle={[{ backgroundColor: '#01bf09' }]}\n                                handleStyle={[{ borderColor: '#01bf09' }]}\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12} md={6} xl={4}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Vertical Slider</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Row>\n                                <Col>\n                                    <Slider\n                                        vertical\n                                        className=\"pc-range-slider square-handler\"\n                                        defaultValue={20}\n                                        handle={handle}\n                                        trackStyle={[{ backgroundColor: '#ffaba5' }]}\n                                        handleStyle={[{ backgroundColor: '#fb0000', borderColor: '#fb0000' }]}\n                                    />\n                                </Col>\n                                <Col>\n                                    <Slider\n                                        vertical\n                                        className=\"pc-range-slider triangle-handler\"\n                                        defaultValue={50}\n                                        handle={handle}\n                                        trackStyle={[{ backgroundColor: '#ffff9c' }]}\n                                        handleStyle={[{ borderBottomColor: '#000' }]}\n                                    />\n                                </Col>\n                                <Col>\n                                    <Slider vertical className=\"pc-range-slider\" defaultValue={36} handle={handle} />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default AdvanceRangeSlider;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n"],"sourceRoot":""}