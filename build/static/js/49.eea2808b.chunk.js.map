{"version":3,"sources":["../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","views/users/GlobalFilter.js","data/userListData.js","views/users/UserList.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"names":["_excluded","_excluded2","PageItem","React","forwardRef","_ref","ref","active","disabled","className","style","activeLabel","children","props","_objectWithoutPropertiesLoose","Component","SafeAnchor","createElement","classNames","_extends","defaultProps","displayName","createButton","name","defaultValue","label","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Item","GlobalFilter","filter","setFilter","useState","value","setValue","onChange","useAsyncDebounce","undefined","e","target","images","require","range","len","arr","i","push","GetName","namor","generate","words","saltLength","photo_new","Math","floor","random","photo","Fragment","src","default","alt","width","newPerson","start","end","statusChance","position","office","age","date","Date","getTime","toDateString","salary","status","type","strings","raw","Styles","styled","div","slice","Object","freeze","defineProperties","Table","columns","data","useTable","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","globalFilter","setGlobalFilter","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","Row","Col","Number","map","striped","bordered","hover","responsive","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","length","onClick","UserList","useMemo","Header","accessor","lens","makeDataLevel","depth","d","subRows","makeData","sm","Card","Body"],"mappings":"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","file":"static/js/49.eea2808b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"],\n    _excluded2 = [\"children\"];\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"size\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import React, { useState } from 'react';\nimport { useAsyncDebounce } from 'react-table';\n\nexport const GlobalFilter = ({ filter, setFilter }) => {\n    const [value, setValue] = useState(filter);\n    const onChange = useAsyncDebounce((value) => {\n        setFilter(value || undefined);\n    }, 1000);\n    return (\n        <span className=\"d-flex align-items-center justify-content-end\">\n            Search:{' '}\n            <input\n                className=\"form-control ml-2 w-auto\"\n                value={value || ''}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n            />\n        </span>\n    );\n};\n","import namor from 'namor';\nimport React from 'react';\n\nconst images = require.context('../assets/images/user', true);\n\nconst range = (len) => {\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n        arr.push(i);\n    }\n    return arr;\n};\n\nconst randomDate = (start, end) => {\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime())).toDateString();\n};\n\nconst GetName = () => {\n    const name = namor.generate({ words: 1, saltLength: 0 });\n    const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n    let photo = images(`./${photo_new}`);\n    return (\n        <React.Fragment>\n            <div className=\"d-inline-block align-middle\">\n                <img src={photo.default} alt=\"user\" className=\"img-radius align-top m-r-15\" style={{ width: '40px' }} />\n                <div className=\"d-inline-block\">\n                    <h6 className=\"m-b-0 text-capitalize\">{name}</h6>\n                    <p className=\"m-b-0\">{name} @gmail.com</p>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst newPerson = () => {\n    const statusChance = Math.random();\n    return {\n        name: <GetName />,\n        position: namor.generate({ words: 1, saltLength: 0 }),\n        office: namor.generate({ words: 1, saltLength: 0 }),\n        age: Math.floor(Math.random() * 60 + 18),\n        date: randomDate(new Date(2012, 0, 1), new Date()),\n        salary: Math.floor(Math.random() * 100 * 1000),\n        status:\n            statusChance > 0.66 ? (\n                <div>\n                    <span className=\"badge badge-light-success\">Active</span>\n                    <div className=\"overlay-edit\">\n                        <button type=\"button\" className=\"btn btn-icon btn-success\">\n                            <i className=\"feather icon-check-circle\">\n                                {' '}\n                                <span className=\"sr-only\" />{' '}\n                            </i>\n                        </button>\n                        <button type=\"button\" className=\"btn btn-icon btn-danger\">\n                            <i className=\"feather icon-trash-2\">\n                                <span className=\"sr-only\" />\n                            </i>\n                        </button>\n                    </div>\n                </div>\n            ) : statusChance > 0.33 ? (\n                <div>\n                    <span className=\"badge badge-light-danger\">Inactive</span>\n                    <div className=\"overlay-edit\">\n                        <button type=\"button\" className=\"btn btn-icon btn-success\">\n                            <i className=\"feather icon-check-circle\">\n                                {' '}\n                                <span className=\"sr-only\" />{' '}\n                            </i>\n                        </button>\n                        <button type=\"button\" className=\"btn btn-icon btn-danger\">\n                            <i className=\"feather icon-trash-2\">\n                                <span className=\"sr-only\" />\n                            </i>\n                        </button>\n                    </div>\n                </div>\n            ) : (\n                <div>\n                    <span className=\"badge badge-light-warning\">In Process</span>\n                    <div className=\"overlay-edit\">\n                        <button type=\"button\" className=\"btn btn-icon btn-success\">\n                            <i className=\"feather icon-check-circle\">\n                                {' '}\n                                <span className=\"sr-only\" />{' '}\n                            </i>\n                        </button>\n                        <button type=\"button\" className=\"btn btn-icon btn-danger\">\n                            <i className=\"feather icon-trash-2\">\n                                <span className=\"sr-only\" />\n                            </i>\n                        </button>\n                    </div>\n                </div>\n            )\n    };\n};\n\nexport default function makeData(...lens) {\n    const makeDataLevel = (depth = 0) => {\n        const len = lens[depth];\n        return range(len).map((d) => {\n            return {\n                ...newPerson(),\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n            };\n        });\n    };\n\n    return makeDataLevel();\n}\n","import React from 'react';\nimport { Row, Col, Card, Pagination } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\n\nimport styled from 'styled-components';\n\nimport { GlobalFilter } from './GlobalFilter';\n\nimport { useTable, useSortBy, usePagination, useGlobalFilter } from 'react-table';\nimport makeData from '../../data/userListData';\n\nconst Styles = styled.div`\n    padding: 0;\n\n    table {\n        border-spacing: 0;\n        border: 1px solid black;\n\n        tr {\n            :last-child {\n                td {\n                    border-bottom: 0;\n                }\n            }\n        }\n\n        th,\n        td {\n            margin: 0;\n            padding: 0.5rem;\n            border-bottom: 1px solid black;\n            border-right: 1px solid black;\n\n            :last-child {\n                border-right: 0;\n            }\n        }\n    }\n`;\n\nfunction Table({ columns, data }) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n\n        globalFilter,\n        setGlobalFilter,\n\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: { pageIndex: 0, pageSize: 10 }\n        },\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    );\n\n    return (\n        <>\n            <Row>\n                <Col className=\"d-flex align-items-center\">\n                    Show\n                    <select\n                        className=\"form-control w-auto mx-2\"\n                        value={pageSize}\n                        onChange={(e) => {\n                            setPageSize(Number(e.target.value));\n                        }}\n                    >\n                        {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                            <option key={pageSize} value={pageSize}>\n                                {pageSize}\n                            </option>\n                        ))}\n                    </select>\n                    entries\n                </Col>\n                <Col>\n                    <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n                </Col>\n            </Row>\n            <BTable striped bordered hover responsive {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                // Add the sorting props to control sorting. For this example\n                                // we can add them into the header props\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    {/* Add a sort direction indicator */}\n                                    <span>\n                                        {column.isSorted ? (\n                                            column.isSortedDesc ? (\n                                                <span className=\"feather icon-arrow-down text-muted\" />\n                                            ) : (\n                                                <span className=\"feather icon-arrow-up text-muted\" />\n                                            )\n                                        ) : (\n                                            ''\n                                        )}\n                                    </span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </BTable>\n            <Row className=\"justify-content-between\">\n                <Col>\n                    <span className=\"d-flex align-items-center\">\n                        Page{' '}\n                        <strong>\n                            {' '}\n                            {pageIndex + 1} of {pageOptions.length}{' '}\n                        </strong>{' '}\n                        | Go to page:{' '}\n                        <input\n                            type=\"number\"\n                            className=\"form-control ml-2\"\n                            defaultValue={pageIndex + 1}\n                            onChange={(e) => {\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                                gotoPage(page);\n                            }}\n                            style={{ width: '100px' }}\n                        />\n                    </span>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\n                    </Pagination>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nconst UserList = () => {\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Name',\n                accessor: 'name'\n            },\n            {\n                Header: 'Position',\n                accessor: 'position'\n            },\n            {\n                Header: 'Office',\n                accessor: 'office'\n            },\n            {\n                Header: 'Age',\n                accessor: 'age'\n            },\n            {\n                Header: 'Date',\n                accessor: 'date'\n            },\n            {\n                Header: 'Salary',\n                accessor: 'salary'\n            },\n            {\n                Header: 'Status',\n                accessor: 'status'\n            }\n        ],\n        []\n    );\n\n    const data = React.useMemo(() => makeData(100), []);\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <Card className=\"user-profile-list\">\n                        <Card.Body className=\"p-0\">\n                            <Styles>\n                                <Table columns={columns} data={data} />\n                            </Styles>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default UserList;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"sourceRoot":""}