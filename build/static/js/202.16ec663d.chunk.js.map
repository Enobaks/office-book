{"version":3,"sources":["views/dashboard/DashCrypto/chart/AmChartStatistics1.js","views/dashboard/DashCrypto/chart/AmChartStatistics8.js","views/dashboard/DashCrypto/chart/AmChartWorldUser.js","views/dashboard/DashCrypto/index.js"],"names":["AmChartStatistics1","props","useEffect","AmCharts","makeChart","type","theme","marginTop","marginRight","dataProvider","year","value","value2","valueAxes","axisAlpha","position","graphs","id","balloonText","bullet","lineColor","lineThickness","negativeLineColor","valueField","chartCursor","cursorAlpha","valueLineEnabled","valueLineBalloonEnabled","valueLineAlpha","fullWidth","categoryField","categoryAxis","minorGridAlpha","minorGridEnabled","gridAlpha","lineAlpha","legend","useGraphSettings","className","style","width","height","AmChartStatistics8","useState","dataum","chartm","addClassNames","defs","filter","x","y","feGaussianBlur","in","stdDeviation","feOffset","result","dx","dy","feColorMatrix","values","feBlend","in2","mode","fontSize","dataDateFormat","autoMarginOffset","marginBottom","color","offset","inside","parseDates","minPeriod","zoomable","cursorColor","categoryBalloonColor","valueZoomable","fillColors","balloon","drop","adjustBorderColor","fillAlphas","showBalloon","setTimeout","zoomToIndexes","length","am4core","am4themes_animated","AmChartWorldUser","chart","am4maps","geodata","am4geodata_continentsLow","projection","Miller","polygonSeries","series","push","exclude","useGeodata","pieSeries","pieTemplate","mapImages","template","propertyFields","latitude","longitude","pieChartTemplate","createChild","am4charts","adapter","add","data","target","dataItem","dataContext","pieData","horizontalCenter","verticalCenter","titles","create","text","pieSeriesTemplate","dataFields","category","labels","disabled","ticks","title","fill","DashCrypto","Fragment","Row","Col","md","xl","Card","Body","Header","Title","as","to"],"mappings":"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","file":"static/js/202.16ec663d.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport 'amcharts3/amcharts/amcharts';\nimport 'amcharts3/amcharts/serial';\nimport 'amcharts3/amcharts/themes/light';\nimport AmCharts from '@amcharts/amcharts3-react';\n\nconst AmChartStatistics1 = (props) => {\n    useEffect(() => {\n        AmCharts.makeChart('line-area2', {\n            type: 'serial',\n            theme: 'light',\n            marginTop: 10,\n            marginRight: 0,\n            dataProvider: [\n                {\n                    year: 'Jan',\n                    value: 5,\n                    value2: 80\n                },\n                {\n                    year: 'Feb',\n                    value: 30,\n                    value2: 95\n                },\n                {\n                    year: 'Mar',\n                    value: 25,\n                    value2: 87\n                },\n                {\n                    year: 'Apr',\n                    value: 55,\n                    value2: 155\n                },\n                {\n                    year: 'May',\n                    value: 45,\n                    value2: 140\n                },\n                {\n                    year: 'Jun',\n                    value: 65,\n                    value2: 147\n                },\n                {\n                    year: 'Jul',\n                    value: 60,\n                    value2: 130\n                },\n                {\n                    year: 'Aug',\n                    value: 105,\n                    value2: 180\n                },\n                {\n                    year: 'Sep',\n                    value: 80,\n                    value2: 160\n                },\n                {\n                    year: 'Oct',\n                    value: 110,\n                    value2: 175\n                },\n                {\n                    year: 'Nov',\n                    value: 120,\n                    value2: 165\n                },\n                {\n                    year: 'Dec',\n                    value: 150,\n                    value2: 200\n                }\n            ],\n            valueAxes: [\n                {\n                    axisAlpha: 0,\n                    position: 'left'\n                }\n            ],\n            graphs: [\n                {\n                    id: 'g1',\n                    balloonText: \"[[category]]<br><b><span style='font-size:14px;'>[[value]]</span></b>\",\n                    bullet: 'round',\n                    lineColor: '#1de9b6',\n                    lineThickness: 3,\n                    negativeLineColor: '#1de9b6',\n                    valueField: 'value'\n                },\n                {\n                    id: 'g2',\n                    balloonText: \"[[category]]<br><b><span style='font-size:14px;'>[[value]]</span></b>\",\n                    bullet: 'round',\n                    lineColor: '#10adf5',\n                    lineThickness: 3,\n                    negativeLineColor: '#10adf5',\n                    valueField: 'value2'\n                }\n            ],\n            chartCursor: {\n                cursorAlpha: 0,\n                valueLineEnabled: true,\n                valueLineBalloonEnabled: true,\n                valueLineAlpha: 0.3,\n                fullWidth: true\n            },\n            categoryField: 'year',\n            categoryAxis: {\n                minorGridAlpha: 0,\n                minorGridEnabled: true,\n                gridAlpha: 0,\n                axisAlpha: 0,\n                lineAlpha: 0\n            },\n            legend: {\n                useGraphSettings: true,\n                position: 'top'\n            }\n        });\n    });\n\n    return <div id=\"line-area2\" className=\"lineAreaDashboard\" style={{ width: '100%', height: props.height }} />;\n};\n\nexport default AmChartStatistics1;\n","import React, { useEffect, useState } from 'react';\nimport 'amcharts3/amcharts/amcharts';\nimport 'amcharts3/amcharts/serial';\nimport 'amcharts3/amcharts/themes/light';\nimport AmCharts from '@amcharts/amcharts3-react';\n\nconst AmChartStatistics8 = (props) => {\n    const [dataum] = useState([\n        {\n            year: '1999',\n            value: 30\n        },\n        {\n            year: '2000',\n            value: 55\n        },\n        {\n            year: '2001',\n            value: 80\n        },\n        {\n            year: '2002',\n            value: 60\n        },\n        {\n            year: '2003',\n            value: 70\n        },\n        {\n            year: '2004',\n            value: 70\n        },\n        {\n            year: '2005',\n            value: 110\n        },\n        {\n            year: '2006',\n            value: 90\n        },\n        {\n            year: '2007',\n            value: 130\n        }\n    ]);\n\n    useEffect(() => {\n        let chartm = AmCharts.makeChart('earnings-chart', {\n            type: 'serial',\n            addClassNames: true,\n            defs: {\n                filter: [\n                    {\n                        x: '-50%',\n                        y: '-50%',\n                        width: '200%',\n                        height: '200%',\n                        id: 'blur',\n                        feGaussianBlur: {\n                            in: 'SourceGraphic',\n                            stdDeviation: '30'\n                        }\n                    },\n                    {\n                        id: 'shadow',\n                        x: '-10%',\n                        y: '-10%',\n                        width: '120%',\n                        height: '120%',\n                        feOffset: {\n                            result: 'offOut',\n                            in: 'SourceAlpha',\n                            dx: '0',\n                            dy: '20'\n                        },\n                        feGaussianBlur: {\n                            result: 'blurOut',\n                            in: 'offOut',\n                            stdDeviation: '10'\n                        },\n                        feColorMatrix: {\n                            result: 'blurOut',\n                            type: 'matrix',\n                            values: '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .2 0'\n                        },\n                        feBlend: {\n                            in: 'SourceGraphic',\n                            in2: 'blurOut',\n                            mode: 'normal'\n                        }\n                    }\n                ]\n            },\n            fontSize: 15,\n            dataProvider: dataum,\n            dataDateFormat: 'YYYY',\n            autoMarginOffset: 0,\n            marginRight: -1,\n            marginBottom: -2,\n            categoryField: 'year',\n            categoryAxis: {\n                color: '#fff',\n                gridAlpha: 0,\n                axisAlpha: 0,\n                lineAlpha: 0,\n                offset: -20,\n                inside: true,\n                parseDates: true,\n                minPeriod: 'YYYY'\n            },\n            chartCursor: {\n                valueLineEnabled: false,\n                valueLineBalloonEnabled: false,\n                cursorAlpha: 0,\n                zoomable: false,\n                cursorColor: '#fff',\n                categoryBalloonColor: '#88dcef',\n                valueZoomable: false,\n                valueLineAlpha: 0\n            },\n            valueAxes: [\n                {\n                    fontSize: 0,\n                    inside: true,\n                    gridAlpha: 0,\n                    axisAlpha: 0,\n                    lineAlpha: 0\n                }\n            ],\n            graphs: [\n                {\n                    id: 'g1',\n                    type: 'line',\n                    valueField: 'value',\n                    fillColors: ['#1dc4e9', '#A389D4'],\n                    lineColor: '#1dc4e9',\n                    balloon: {\n                        drop: true,\n                        adjustBorderColor: false,\n                        color: '#ffffff',\n                        type: 'smoothedLine'\n                    },\n                    lineAlpha: 1,\n                    lineThickness: 5,\n                    fillAlphas: 0.9,\n                    showBalloon: true\n                }\n            ]\n        });\n        setTimeout(() => {\n            chartm.zoomToIndexes(1, dataum.length - 2);\n        }, 400);\n    });\n\n    return <div id=\"earnings-chart\" style={{ width: '100%', height: props.height }} />;\n};\n\nexport default AmChartStatistics8;\n","import React, { useEffect } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_continentsLow from '@amcharts/amcharts4-geodata/continentsLow';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\nam4core.useTheme(am4themes_animated);\n\nconst AmChartWorldUser = (props) => {\n    useEffect(() => {\n        let chart = am4core.create('world-low', am4maps.MapChart);\n\n        chart.geodata = am4geodata_continentsLow;\n\n        chart.projection = new am4maps.projections.Miller();\n\n        let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        polygonSeries.exclude = ['antarctica'];\n        polygonSeries.useGeodata = true;\n\n        let pieSeries = chart.series.push(new am4maps.MapImageSeries());\n        let pieTemplate = pieSeries.mapImages.template;\n        pieTemplate.propertyFields.latitude = 'latitude';\n        pieTemplate.propertyFields.longitude = 'longitude';\n\n        let pieChartTemplate = pieTemplate.createChild(am4charts.PieChart);\n        pieChartTemplate.adapter.add('data', function (data, target) {\n            if (target.dataItem) {\n                return target.dataItem.dataContext.pieData;\n            } else {\n                return [];\n            }\n        });\n        pieChartTemplate.propertyFields.width = 'width';\n        pieChartTemplate.propertyFields.height = 'height';\n        pieChartTemplate.horizontalCenter = 'middle';\n        pieChartTemplate.verticalCenter = 'middle';\n\n        let pieTitle = pieChartTemplate.titles.create();\n        pieTitle.text = '{title}';\n\n        let pieSeriesTemplate = pieChartTemplate.series.push(new am4charts.PieSeries());\n        pieSeriesTemplate.dataFields.category = 'category';\n        pieSeriesTemplate.dataFields.value = 'value';\n        pieSeriesTemplate.labels.template.disabled = true;\n        pieSeriesTemplate.ticks.template.disabled = true;\n\n        pieSeries.data = [\n            {\n                title: 'North America',\n                latitude: 39.563353,\n                longitude: -99.316406,\n                width: 100,\n                height: 100,\n                pieData: [\n                    {\n                        category: 'Category #1',\n                        value: 1200,\n                        fill: 'red'\n                    },\n                    {\n                        category: 'Category #2',\n                        value: 500\n                    },\n                    {\n                        category: 'Category #3',\n                        value: 765\n                    },\n                    {\n                        category: 'Category #4',\n                        value: 260\n                    }\n                ]\n            },\n            {\n                title: 'Europe',\n                latitude: 50.896104,\n                longitude: 19.160156,\n                width: 50,\n                height: 50,\n                pieData: [\n                    {\n                        category: 'Category #1',\n                        value: 200\n                    },\n                    {\n                        category: 'Category #2',\n                        value: 600\n                    },\n                    {\n                        category: 'Category #3',\n                        value: 350\n                    }\n                ]\n            },\n            {\n                title: 'Asia',\n                latitude: 47.212106,\n                longitude: 103.183594,\n                width: 80,\n                height: 80,\n                pieData: [\n                    {\n                        category: 'Category #1',\n                        value: 352\n                    },\n                    {\n                        category: 'Category #2',\n                        value: 266\n                    },\n                    {\n                        category: 'Category #3',\n                        value: 512\n                    },\n                    {\n                        category: 'Category #4',\n                        value: 199\n                    }\n                ]\n            },\n            {\n                title: 'Africa',\n                latitude: 11.081385,\n                longitude: 21.621094,\n                width: 50,\n                height: 50,\n                pieData: [\n                    {\n                        category: 'Category #1',\n                        value: 200\n                    },\n                    {\n                        category: 'Category #2',\n                        value: 300\n                    },\n                    {\n                        category: 'Category #3',\n                        value: 599\n                    },\n                    {\n                        category: 'Category #4',\n                        value: 512\n                    }\n                ]\n            }\n        ];\n    });\n\n    return <div id=\"world-low\" style={{ width: '100%', height: props.height }} />;\n};\n\nexport default AmChartWorldUser;\n","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport AmChartStatistics1 from './chart/AmChartStatistics1';\nimport AmChartStatistics8 from './chart/AmChartStatistics8';\nimport AmChartWorldUser from './chart/AmChartWorldUser';\n\nconst DashCrypto = () => {\n    return (\n        <React.Fragment>\n            <Row>\n                <Col md={6} xl={4}>\n                    <Card className=\"theme-bg bitcoin-wallet\">\n                        <Card.Body>\n                            <h5 className=\"text-white mb-2\">Bitcoin Wallet</h5>\n                            <h2 className=\"text-white mb-3 f-w-300\">$9,302</h2>\n                            <span className=\"text-white d-block\">Ratings by Market Capitalization</span>\n                            <i className=\"fab fa-bitcoin f-70 text-white\" />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={6} xl={4}>\n                    <Card className=\"theme-bg2 bitcoin-wallet\">\n                        <Card.Body>\n                            <h5 className=\"text-white mb-2\">Bitcoin Wallet</h5>\n                            <h2 className=\"text-white mb-3 f-w-300\">$8,101</h2>\n                            <span className=\"text-white d-block\">Ratings by Market Capitalization</span>\n                            <i className=\"fas fa-dollar-sign f-70 text-white\" />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col md={12} xl={4}>\n                    <Card className=\"bg-c-blue bitcoin-wallet\">\n                        <Card.Body>\n                            <h5 className=\"text-white mb-2\">Bitcoin Wallet</h5>\n                            <h2 className=\"text-white mb-3 f-w-300\">$7,501</h2>\n                            <span className=\"text-white d-block\">Ratings by Market Capitalization</span>\n                            <i className=\"fa fa-database f-70 text-white\" />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={8}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Statistics</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <AmChartStatistics1 height=\"330px\" />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4}>\n                    <Card className=\"note-bar\">\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Notifications</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"p-0\">\n                            <Link to=\"#\" className=\"media friendlist-box\">\n                                <div className=\"mr-3 photo-table\">\n                                    <i className=\"fa fa-bell f-30\" />\n                                </div>\n                                <div className=\"media-body\">\n                                    <h6>New order received</h6>\n                                    <span className=\"f-12 float-right text-muted\">12.56</span>\n                                    <p className=\"text-muted m-0\">2 unread notification</p>\n                                </div>\n                            </Link>\n                            <Link to=\"#\" className=\"media friendlist-box border-top\">\n                                <div className=\"mr-3 photo-table\">\n                                    <i className=\"fa fa-bell f-30\" />\n                                </div>\n                                <div className=\"media-body\">\n                                    <h6>New user register</h6>\n                                    <span className=\"f-12 float-right text-muted\">12.36</span>\n                                    <p className=\"text-muted m-0\">xx messages</p>\n                                </div>\n                            </Link>\n                            <Link to=\"#\" className=\"media friendlist-box border-top\">\n                                <div className=\"mr-3 photo-table\">\n                                    <i className=\"fa fa-bell f-30\" />\n                                </div>\n                                <div className=\"media-body\">\n                                    <h6>New order register</h6>\n                                    <span className=\"f-12 float-right text-muted\">11.45</span>\n                                    <p className=\"text-muted m-0\">2 read notification</p>\n                                </div>\n                            </Link>\n                            <div className=\"media friendlist-box border-top\">\n                                <div className=\"mr-3 photo-table\">\n                                    <i className=\"fa fa-bell f-30\" />\n                                </div>\n                                <div className=\"media-body\">\n                                    <h6>New order prepend</h6>\n                                    <span className=\"f-12 float-right text-muted\">9.39</span>\n                                    <p className=\"text-muted m-0\">xx messages</p>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={8} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Users From United States</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <AmChartWorldUser height=\"350px\" />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Statistics</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <h3 className=\"f-w-300\">$894.39</h3>\n                        </Card.Body>\n                        <Card.Body className=\"p-0\">\n                            <AmChartStatistics8 height=\"310px\" />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default DashCrypto;\n"],"sourceRoot":""}