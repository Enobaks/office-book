{"version":3,"sources":["views/charts/google-chart/chart/AreaBasicChart.js","views/charts/google-chart/chart/AreaStackingChart.js","views/charts/google-chart/chart/BarBasicChart.js","views/charts/google-chart/chart/BubbleChart.js","views/charts/google-chart/chart/CandlestickChart.js","views/charts/google-chart/chart/WaterfallChart.js","views/charts/google-chart/chart/ComboChart.js","views/charts/google-chart/chart/PieDonutChart.js","views/charts/google-chart/chart/PieExploadingChart.js","views/charts/google-chart/chart/PieSliceVisibilityChart.js","views/charts/google-chart/index.js"],"names":["AreaBasicChart","width","height","chartType","loader","data","options","title","hAxis","titleTextStyle","color","vAxis","minValue","colors","rootProps","AreaStackingChart","isStacked","legend","position","maxLines","BarBasicChart","chartArea","BubbleChart","bubble","textStyle","fontSize","CandlestickChart","WaterfallChart","bar","groupWidth","candlestick","fallingColor","strokeWidth","fill","risingColor","ComboChart","seriesType","series","type","PieDonutChart","pieHole","PieExploadingChart","pieSliceText","slices","offset","PieSliceVisibilityChart","sliceVisibilityThreshold","GoogleChart","Fragment","Row","Col","xl","md","Card","Header","Title","as","Body"],"mappings":"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","file":"static/js/199.c6069212.chunk.js","sourcesContent":["import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst AreaBasicChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"AreaChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Year', 'Sales', 'Expenses'],\n                ['2013', 1000, 400],\n                ['2014', 1170, 460],\n                ['2015', 660, 1120],\n                ['2016', 1030, 540]\n            ]}\n            options={{\n                title: 'Company Performance',\n                hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\n                vAxis: { minValue: 0 },\n                colors: ['#1de9b6', '#1dc4e9']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    );\n};\n\nexport default AreaBasicChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst AreaStackingChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"AreaChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Year', 'Sales', 'Expenses'],\n                ['2013', 1000, 400],\n                ['2014', 1170, 460],\n                ['2015', 660, 1120],\n                ['2016', 1030, 540]\n            ]}\n            options={{\n                isStacked: true,\n                legend: { position: 'top', maxLines: 3 },\n                vAxis: { minValue: 0 },\n                colors: ['#1de9b6', '#A389D4']\n            }}\n            rootProps={{ 'data-testid': '2' }}\n        />\n    );\n};\n\nexport default AreaStackingChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst BarBasicChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"BarChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['City', '2010 Population', '2000 Population'],\n                ['New York City, NY', 8175000, 8008000],\n                ['Los Angeles, CA', 3792000, 3694000],\n                ['Chicago, IL', 2695000, 2896000],\n                ['Houston, TX', 2099000, 1953000],\n                ['Philadelphia, PA', 1526000, 1517000]\n            ]}\n            options={{\n                title: 'Population of Largest U.S. Cities',\n                chartArea: { width: '50%' },\n                isStacked: true,\n                hAxis: {\n                    title: 'Total Population',\n                    minValue: 0\n                },\n                vAxis: {\n                    title: 'City'\n                },\n                colors: ['#A389D4', '#04a9f5']\n            }}\n            rootProps={{ 'data-testid': '3' }}\n        />\n    );\n};\n\nexport default BarBasicChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst BubbleChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"BubbleChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['ID', 'Life Expectancy', 'Fertility Rate', 'Region', 'Population'],\n                ['CAN', 80.66, 1.67, 'North America', 33739900],\n                ['DEU', 79.84, 1.36, 'Europe', 81902307],\n                ['DNK', 78.6, 1.84, 'Europe', 5523095],\n                ['EGY', 72.73, 2.78, 'Middle East', 79716203],\n                ['GBR', 80.05, 2, 'Europe', 61801570],\n                ['IRN', 72.49, 1.7, 'Middle East', 73137148],\n                ['IRQ', 68.09, 4.77, 'Middle East', 31090763],\n                ['ISR', 81.55, 2.96, 'Middle East', 7485600],\n                ['RUS', 68.6, 1.54, 'Europe', 141850000],\n                ['USA', 78.09, 2.05, 'North America', 307007000]\n            ]}\n            options={{\n                title: 'Correlation between life expectancy, fertility rate and population of some world countries (2010)',\n                hAxis: { title: 'Life Expectancy' },\n                vAxis: { title: 'Fertility Rate' },\n                bubble: { textStyle: { fontSize: 11 } },\n                colors: ['#1de9b6', '#04a9f5', '#A389D4']\n            }}\n            rootProps={{ 'data-testid': '4' }}\n        />\n    );\n};\n\nexport default BubbleChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst CandlestickChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"CandlestickChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['day', 'a', 'b', 'c', 'd'],\n                ['Mon', 20, 28, 38, 45],\n                ['Tue', 31, 38, 55, 66],\n                ['Wed', 50, 55, 77, 80],\n                ['Thu', 77, 77, 66, 50],\n                ['Fri', 68, 66, 22, 15]\n            ]}\n            options={{\n                legend: 'none',\n                colors: ['#04a9f5']\n            }}\n            rootProps={{ 'data-testid': '5' }}\n        />\n    );\n};\n\nexport default CandlestickChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst WaterfallChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"CandlestickChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['day', 'a', 'b', 'c', 'd'],\n                ['Mon', 20, 28, 38, 45],\n                ['Tue', 31, 38, 55, 66],\n                ['Wed', 50, 55, 77, 80],\n                ['Thu', 77, 77, 66, 50],\n                ['Fri', 68, 66, 22, 15]\n            ]}\n            options={{\n                legend: 'none',\n                bar: { groupWidth: '100%' },\n                candlestick: {\n                    fallingColor: {\n                        strokeWidth: 0,\n                        fill: '#04a9f5'\n                    },\n                    risingColor: {\n                        strokeWidth: 0,\n                        fill: '#1de9b6'\n                    }\n                }\n            }}\n            rootProps={{ 'data-testid': '6' }}\n        />\n    );\n};\n\nexport default WaterfallChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst ComboChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"ComboChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Month', 'Bolivia', 'Ecuador', 'Madagascar', 'Papua New Guinea', 'Rwanda', 'Average'],\n                ['2004/05', 165, 938, 522, 998, 450, 614.6],\n                ['2005/06', 135, 1120, 599, 1268, 288, 682],\n                ['2006/07', 157, 1167, 587, 807, 397, 623],\n                ['2007/08', 139, 1110, 615, 968, 215, 609.4],\n                ['2008/09', 136, 691, 629, 1026, 366, 569.6]\n            ]}\n            options={{\n                title: 'Monthly Coffee Production by Country',\n                vAxis: { title: 'Cups' },\n                hAxis: { title: 'Month' },\n                seriesType: 'bars',\n                series: { 5: { type: 'line' } },\n                colors: ['#04a9f5', '#1de9b6', '#f44236', '#1dc4e9', '#A389D4', '#3ebfea']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    );\n};\n\nexport default ComboChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst PieDonutChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Task', 'Hours per Day'],\n                ['Work', 11],\n                ['Eat', 2],\n                ['Commute', 2],\n                ['Watch TV', 2],\n                ['Sleep', 7]\n            ]}\n            options={{\n                title: 'My Daily Activities',\n                pieHole: 0.4,\n                colors: ['#1dc4e9', '#1de9b6', '#3ebfea', '#A389D4', '#899FD4']\n            }}\n            rootProps={{ 'data-testid': '3' }}\n        />\n    );\n};\n\nexport default PieDonutChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst PieExploadingChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Language', 'Speakers (in millions)'],\n                ['Assamese', 13],\n                ['Bengali', 83],\n                ['Bodo', 1.4],\n                ['Dogri', 2.3],\n                ['Gujarati', 46],\n                ['Hindi', 300],\n                ['Kannada', 38],\n                ['Kashmiri', 5.5],\n                ['Konkani', 5],\n                ['Maithili', 20],\n                ['Malayalam', 33],\n                ['Manipuri', 1.5],\n                ['Marathi', 72],\n                ['Nepali', 2.9],\n                ['Oriya', 33],\n                ['Punjabi', 29],\n                ['Sanskrit', 0.01],\n                ['Santhali', 6.5],\n                ['Sindhi', 2.5],\n                ['Tamil', 61],\n                ['Telugu', 74],\n                ['Urdu', 52]\n            ]}\n            options={{\n                title: 'Indian Language Use',\n                legend: 'none',\n                pieSliceText: 'label',\n                slices: {\n                    4: { offset: 0.2 },\n                    12: { offset: 0.3 },\n                    14: { offset: 0.4 },\n                    15: { offset: 0.5 }\n                },\n                colors: ['#04a9f5', '#1de9b6', '#1dc4e9', '#FE8A7D', '#A389D4', '#3ebfea']\n            }}\n            rootProps={{ 'data-testid': '5' }}\n        />\n    );\n};\n\nexport default PieExploadingChart;\n","import React from 'react';\nimport Chart from 'react-google-charts';\n\nconst PieSliceVisibilityChart = () => {\n    return (\n        <Chart\n            width=\"100%\"\n            height=\"300px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Pizza', 'Popularity'],\n                ['Pepperoni', 33],\n                ['Hawaiian', 26],\n                ['Mushroom', 22],\n                ['Sausage', 10],\n                ['Anchovies', 9]\n            ]}\n            options={{\n                title: 'Popularity of Types of Pizza',\n                sliceVisibilityThreshold: 0.2,\n                colors: ['#04a9f5', '#1de9b6', '#A389D4', '#899FD4']\n            }}\n            rootProps={{ 'data-testid': '7' }}\n        />\n    );\n};\n\nexport default PieSliceVisibilityChart;\n","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport AreaBasicChart from './chart/AreaBasicChart';\nimport AreaStackingChart from './chart/AreaStackingChart';\nimport BarBasicChart from './chart/BarBasicChart';\nimport BubbleChart from './chart/BubbleChart';\nimport CandlestickChart from './chart/CandlestickChart';\nimport WaterfallChart from './chart/WaterfallChart';\nimport ComboChart from './chart/ComboChart';\nimport PieDonutChart from './chart/PieDonutChart';\nimport PieExploadingChart from './chart/PieExploadingChart';\nimport PieSliceVisibilityChart from './chart/PieSliceVisibilityChart';\n\nconst GoogleChart = () => {\n    return (\n        <React.Fragment>\n            <Row>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Area Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <AreaBasicChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Stacking Area Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <AreaStackingChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Bar Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <BarBasicChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Bubble Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <BubbleChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Candlestick Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <CandlestickChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Waterfall Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <WaterfallChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Combo Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <ComboChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Donut Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <PieDonutChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Exploading A Slice Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <PieExploadingChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4} md={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Slice Visibility Threshold Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <PieSliceVisibilityChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleChart;\n"],"sourceRoot":""}