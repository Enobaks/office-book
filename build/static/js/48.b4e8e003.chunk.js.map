{"version":3,"sources":["../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","views/applications/task/GlobalFilter.js","data/taskListData.js","views/applications/task/TaskList.js"],"names":["_excluded","_excluded2","PageItem","React","forwardRef","_ref","ref","active","disabled","className","style","activeLabel","children","props","_objectWithoutPropertiesLoose","Component","SafeAnchor","createElement","classNames","_extends","defaultProps","displayName","createButton","name","defaultValue","label","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Item","GlobalFilter","filter","setFilter","useState","value","setValue","onChange","useAsyncDebounce","undefined","e","target","images","require","range","len","arr","i","push","randomDate","start","end","today","Date","getTime","Math","random","dd","getDate","mm","getMonth","getFullYear","GetUsers","count","floor","photo_new","photo_new1","photo_new2","photo","photo1","photo2","Fragment","to","src","default","width","alt","newPerson","id","namor","generate","words","saltLength","saltType","task","date","type","console","log","status","users","action","Table","columns","data","useTable","initialState","pageIndex","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","globalFilter","setGlobalFilter","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","Row","Col","Number","map","striped","bordered","hover","responsive","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","length","onClick","TaskList","useMemo","Header","accessor","lens","makeDataLevel","depth","d","subRows","makeData","selectedTask","setSelectedTask","handleClick","clickedValue","checked","parseInt","item","sm","Card","Title","as","Body","placeholder","findIndex","defaultChecked"],"mappings":"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","file":"static/js/48.b4e8e003.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"],\n    _excluded2 = [\"children\"];\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"size\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import React, { useState } from 'react';\nimport { useAsyncDebounce } from 'react-table';\n\nexport const GlobalFilter = ({ filter, setFilter }) => {\n    const [value, setValue] = useState(filter);\n    const onChange = useAsyncDebounce((value) => {\n        setFilter(value || undefined);\n    }, 1000);\n    return (\n        <span className=\"d-flex align-items-center justify-content-end\">\n            Search:{' '}\n            <input\n                className=\"form-control ml-2 w-auto\"\n                value={value || ''}\n                onChange={(e) => {\n                    setValue(e.target.value);\n                    onChange(e.target.value);\n                }}\n            />\n        </span>\n    );\n};\n","import namor from 'namor';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst images = require.context('../assets/images/user', true);\n\nconst range = (len) => {\n    const arr = [];\n    for (let i = 0; i < len; i++) {\n        arr.push(i);\n    }\n    return arr;\n};\n\nconst randomDate = (start, end) => {\n    let today = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n        dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n        mm = '0' + mm;\n    }\n\n    return yyyy + '-' + mm + '-' + dd;\n};\n\nconst GetUsers = () => {\n    const count = Math.floor(Math.random() * 3 + 1);\n    const photo_new = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n    const photo_new1 = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n    const photo_new2 = 'avatar-' + Math.floor(Math.random() * 5 + 1) + '.jpg';\n    let photo = images(`./${photo_new}`);\n    let photo1 = images(`./${photo_new1}`);\n    let photo2 = images(`./${photo_new2}`);\n\n    return (\n        <React.Fragment>\n            {count < 2 ? (\n                <Link to=\"#\">\n                    <img className=\"img-fluid img-radius m-r-5\" src={photo.default} style={{ width: '40px' }} alt=\"Task List\" />\n                </Link>\n            ) : (\n                ''\n            )}\n            {count < 3 ? (\n                <Link to=\"#\">\n                    <img className=\"img-fluid img-radius m-r-5\" src={photo1.default} style={{ width: '40px' }} alt=\"Task List\" />\n                </Link>\n            ) : (\n                ''\n            )}\n            {count === 3 ? (\n                <Link to=\"#\">\n                    <img className=\"img-fluid img-radius m-r-5\" src={photo2.default} style={{ width: '40px' }} alt=\"Task List\" />\n                </Link>\n            ) : (\n                ''\n            )}\n            <Link to=\"#\">\n                <i className=\"fas fa-plus f-w-600 m-l-5\" />\n            </Link>\n        </React.Fragment>\n    );\n};\n\nconst newPerson = () => {\n    return {\n        id: namor.generate({ words: 0, saltLength: 2, saltType: 'number' }),\n        task: namor.generate({ words: 2, saltLength: 0 }),\n        date: (\n            <div className=\"form-group form-primary mb-0\">\n                <input\n                    type=\"date\"\n                    className=\"form-control\"\n                    defaultValue={randomDate(new Date(2012, 0, 1), new Date())}\n                    onChange={(e) => console.log(e)}\n                />\n                <span className=\"form-bar\" />\n            </div>\n        ),\n        status: (\n            <div className=\"form-group form-primary mb-0\">\n                <select name=\"select\" className=\"form-control form-control-sm\" defaultValue=\"open\">\n                    <option value=\"open\">Open</option>\n                    <option value=\"pending\">Pending</option>\n                    <option value=\"resolved\">Resolved</option>\n                    <option value=\"invalid\">Invalid</option>\n                    <option value=\"on-hold\">On hold</option>\n                    <option value=\"close\">Close</option>\n                </select>\n                <span className=\"form-bar\" />\n            </div>\n        ),\n        users: GetUsers(),\n        action: (\n            <React.Fragment>\n                <Link to=\"#\" className=\"btn btn-icon btn-rounded btn-outline-primary\">\n                    <span className=\"fas fa-book\" />\n                </Link>\n                <Link to=\"#\" className=\"btn btn-icon btn-rounded btn-outline-warning mx-1\">\n                    <span className=\"fas fa-edit\" />\n                </Link>\n                <Link to=\"#\" className=\"btn btn-icon btn-rounded btn-outline-danger\">\n                    <span className=\"fas fa-trash\" />\n                </Link>\n            </React.Fragment>\n        )\n    };\n};\n\nexport default function makeData(...lens) {\n    const makeDataLevel = (depth = 0) => {\n        const len = lens[depth];\n        return range(len).map((d) => {\n            return {\n                ...newPerson(),\n                subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined\n            };\n        });\n    };\n\n    return makeDataLevel();\n}\n","import React, { useState } from 'react';\nimport { Row, Col, Card, Pagination } from 'react-bootstrap';\nimport BTable from 'react-bootstrap/Table';\n\nimport { GlobalFilter } from './GlobalFilter';\n\nimport { useTable, useSortBy, usePagination, useGlobalFilter } from 'react-table';\nimport makeData from '../../../data/taskListData';\n\nfunction Table({ columns, data }) {\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n\n        globalFilter,\n        setGlobalFilter,\n\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize }\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: { pageIndex: 0, pageSize: 10 }\n        },\n        useGlobalFilter,\n        useSortBy,\n        usePagination\n    );\n\n    return (\n        <>\n            <Row className=\"mb-3\">\n                <Col className=\"d-flex align-items-center\">\n                    Show\n                    <select\n                        className=\"form-control w-auto mx-2\"\n                        value={pageSize}\n                        onChange={(e) => {\n                            setPageSize(Number(e.target.value));\n                        }}\n                    >\n                        {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                            <option key={pageSize} value={pageSize}>\n                                {pageSize}\n                            </option>\n                        ))}\n                    </select>\n                    entries\n                </Col>\n                <Col>\n                    <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\n                </Col>\n            </Row>\n            <BTable striped bordered hover responsive {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                // Add the sorting props to control sorting. For this example\n                                // we can add them into the header props\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    {/* Add a sort direction indicator */}\n                                    <span>\n                                        {column.isSorted ? (\n                                            column.isSortedDesc ? (\n                                                <span className=\"feather icon-arrow-down text-muted\" />\n                                            ) : (\n                                                <span className=\"feather icon-arrow-up text-muted\" />\n                                            )\n                                        ) : (\n                                            ''\n                                        )}\n                                    </span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </BTable>\n            <Row className=\"justify-content-between\">\n                <Col>\n                    <span className=\"d-flex align-items-center\">\n                        Page{' '}\n                        <strong>\n                            {' '}\n                            {pageIndex + 1} of {pageOptions.length}{' '}\n                        </strong>{' '}\n                        | Go to page:{' '}\n                        <input\n                            type=\"number\"\n                            className=\"form-control ml-2\"\n                            defaultValue={pageIndex + 1}\n                            onChange={(e) => {\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                                gotoPage(page);\n                            }}\n                            style={{ width: '100px' }}\n                        />\n                    </span>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\n                    </Pagination>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nconst TaskList = () => {\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: '#',\n                accessor: 'id'\n            },\n            {\n                Header: 'Task List',\n                accessor: 'task'\n            },\n            {\n                Header: 'Last Comit',\n                accessor: 'date'\n            },\n            {\n                Header: 'Status',\n                accessor: 'status'\n            },\n            {\n                Header: 'Assigned User',\n                accessor: 'users'\n            },\n            {\n                Header: 'Action',\n                accessor: 'action'\n            }\n        ],\n        []\n    );\n\n    const data = React.useMemo(() => makeData(100), []);\n\n    const [selectedTask, setSelectedTask] = useState([]);\n\n    const handleClick = (e) => {\n        const clickedValue = e.target.value;\n        if (e.target.checked) {\n            setSelectedTask([...selectedTask, parseInt(clickedValue)]);\n        } else {\n            setSelectedTask(selectedTask.filter((item) => item !== parseInt(clickedValue)));\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Task List</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Table columns={columns} data={data} />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={12}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">To Do List</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <div className=\"input-group mb-3\">\n                                <input type=\"text\" className=\"form-control add_task_todo\" placeholder=\"Create your task list\" />\n                                <div className=\"input-group-append\">\n                                    <button className=\"btn btn-primary btn-icon btn-msg-send\" type=\"button\">\n                                        <i className=\"fa fa-plus\" />\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"new-task\">\n                                <div className=\"to-do-list mb-4\">\n                                    <div className=\"checkbox-fade fade-in-primary\">\n                                        <label\n                                            className={\n                                                selectedTask.findIndex((item) => item === 1) > -1 ? 'check-task done-task' : 'check-task'\n                                            }\n                                        >\n                                            <input\n                                                type=\"checkbox\"\n                                                value={1}\n                                                defaultChecked={selectedTask.findIndex((item) => item === 1) > -1}\n                                                onClick={(e) => handleClick(e)}\n                                            />\n                                            <span className=\"cr mr-3\">\n                                                <i className=\"cr-icon fa fa-check txt-primary\" />\n                                            </span>\n                                            <span>\n                                                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has\n                                                been the industry's\n                                            </span>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"to-do-list mb-4\">\n                                    <div className=\"checkbox-fade fade-in-primary\">\n                                        <label\n                                            className={\n                                                selectedTask.findIndex((item) => item === 2) > -1 ? 'check-task done-task' : 'check-task'\n                                            }\n                                        >\n                                            <input\n                                                type=\"checkbox\"\n                                                value={2}\n                                                defaultChecked={selectedTask.findIndex((item) => item === 2) > -1}\n                                                onClick={(e) => handleClick(e)}\n                                            />\n                                            <span className=\"cr mr-3\">\n                                                <i className=\"cr-icon fa fa-check txt-primary\" />\n                                            </span>\n                                            <span>scrambled it to make a type specimen book. It has survived not only five centuries</span>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"to-do-list mb-4\">\n                                    <div className=\"checkbox-fade fade-in-primary\">\n                                        <label\n                                            className={\n                                                selectedTask.findIndex((item) => item === 3) > -1 ? 'check-task done-task' : 'check-task'\n                                            }\n                                        >\n                                            <input\n                                                type=\"checkbox\"\n                                                value={3}\n                                                defaultChecked={selectedTask.findIndex((item) => item === 3) > -1}\n                                                onClick={(e) => handleClick(e)}\n                                            />\n                                            <span className=\"cr mr-3\">\n                                                <i className=\"cr-icon fa fa-check txt-primary\" />\n                                            </span>\n                                            <span>\n                                                It is a long established fact that a reader will be distracted by the readable content of a\n                                                page\n                                            </span>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"to-do-list mb-4\">\n                                    <div className=\"checkbox-fade fade-in-primary\">\n                                        <label\n                                            className={\n                                                selectedTask.findIndex((item) => item === 4) > -1 ? 'check-task done-task' : 'check-task'\n                                            }\n                                        >\n                                            <input\n                                                type=\"checkbox\"\n                                                value={4}\n                                                defaultChecked={selectedTask.findIndex((item) => item === 4) > -1}\n                                                onClick={(e) => handleClick(e)}\n                                            />\n                                            <span className=\"cr mr-3\">\n                                                <i className=\"cr-icon fa fa-check txt-primary\" />\n                                            </span>\n                                            <span>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots</span>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"to-do-list mb-4\">\n                                    <div className=\"checkbox-fade fade-in-primary\">\n                                        <label\n                                            className={\n                                                selectedTask.findIndex((item) => item === 5) > -1 ? 'check-task done-task' : 'check-task'\n                                            }\n                                        >\n                                            <input\n                                                type=\"checkbox\"\n                                                value={5}\n                                                defaultChecked={selectedTask.findIndex((item) => item === 5) > -1}\n                                                onClick={(e) => handleClick(e)}\n                                            />\n                                            <span className=\"cr mr-3\">\n                                                <i className=\"cr-icon fa fa-check txt-primary\" />\n                                            </span>\n                                            <span>The standard chunk of Lorem Ipsum used since the 1500s is reproduced</span>\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default TaskList;\n"],"sourceRoot":""}