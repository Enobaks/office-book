{"version":3,"sources":["views/ui-elements/advance/AdvanceTaskBoard.js","components/Widgets/Statistic/Notification.js"],"names":["AdvanceTaskBoard","useState","lanes","data","setData","getData","a","axios","get","response","taskboard","useEffect","Fragment","sm","message","link","draggable","editable","canAddLanes","collapsibleLanes","editLaneTitle","className","addCardLink","size","onLaneAdd","console","log","addLaneTitle","onCardUpdate","onLaneUpdate","Notification","props","variant","Link","href","target"],"mappings":"0SAoEeA,UA7DU,WACrB,MAAwBC,mBAAS,CAAEC,MAAO,KAA1C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAO,uCAAG,4BAAAC,EAAA,sEACWC,IAAMC,IAAI,kBADrB,OACNC,EADM,OAEZL,EAAQK,EAASN,KAAKO,WAFV,2CAAH,qDAKbC,qBAAU,WACNN,MACD,IAcH,OACI,eAAC,IAAMO,SAAP,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,GAAI,GAAT,SACI,cAAC,IAAD,CACIC,QAAQ,qEACRC,KAAK,mDAIjB,cAAC,IAAD,UACI,cAAC,IAAD,CAAKF,GAAI,GAAT,SACI,cAAC,IAAD,CACIV,KAAMA,EACNa,WAAS,EACTC,UAAQ,EACRC,aAAW,EACXC,kBAAgB,EAChBC,eAAa,EACbC,UAAU,iBACVC,YACI,sBAAKD,UAAU,OAAf,UACK,IACD,cAAC,IAAD,CAAQE,KAAK,KAAb,6BAGRC,UAtCF,WACdC,QAAQC,IAAI,aAsCIC,aAAa,iBACbC,aApCC,WACjBH,QAAQC,IAAI,mBAoCIG,aAjCC,WACjBJ,QAAQC,IAAI,8B,iCC5BpB,oCAgBeI,IAbM,SAACC,GAClB,OACI,cAAC,IAAMnB,SAAP,UACI,eAAC,IAAD,CAAOoB,QAAQ,UAAf,UACKD,EAAMjB,QACP,cAAC,IAAMmB,KAAP,CAAYC,KAAMH,EAAMhB,KAAMoB,OAAO,SAASd,UAAU,cAAxD","file":"static/js/173.546b2d43.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Row, Col } from 'react-bootstrap';\nimport Board from 'react-trello';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nimport axios from '../../../utils/axios';\n\nconst AdvanceTaskBoard = () => {\n    const [data, setData] = useState({ lanes: [] });\n\n    const getData = async () => {\n        const response = await axios.get('/api/taskboard');\n        setData(response.data.taskboard);\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const onLaneAdd = () => {\n        console.log('Add Task');\n    };\n\n    const onCardUpdate = () => {\n        console.log('on Card Update');\n    };\n\n    const onLaneUpdate = () => {\n        console.log('on Lane Update');\n    };\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://www.npmjs.com/package/react-trello\"\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <Board\n                        data={data}\n                        draggable\n                        editable\n                        canAddLanes\n                        collapsibleLanes\n                        editLaneTitle\n                        className=\"adv-task-board\"\n                        addCardLink={\n                            <div className=\"mt-1\">\n                                {' '}\n                                <Button size=\"sm\">Add New Card</Button>\n                            </div>\n                        }\n                        onLaneAdd={onLaneAdd}\n                        addLaneTitle=\"+ Add New Task\"\n                        onCardUpdate={onCardUpdate}\n                        onLaneUpdate={onLaneUpdate}\n                    />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default AdvanceTaskBoard;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n"],"sourceRoot":""}