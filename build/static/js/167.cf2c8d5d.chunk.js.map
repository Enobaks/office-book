{"version":3,"sources":["views/ui-elements/advance/AdvanceAlert.js","components/Widgets/Statistic/Notification.js"],"names":["AdvanceAlert","sweetAlertHandler","alert","withReactContent","Swal","fire","title","text","type","Fragment","sm","message","link","Header","Title","Body","className","onClick","variant","MySwal","showCloseButton","showCancelButton","then","willDelete","value","input","result","inputAttributes","autocapitalize","confirmButtonText","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","allowOutsideClick","isLoading","undefined","imageUrl","avatar_url","Notification","props","Link","href","target"],"mappings":"qKAAA,qHA0IeA,UApIM,WACjB,IAAMC,EAAoB,SAACC,GACRC,IAAiBC,KACzBC,KAAK,CACRC,MAAOJ,EAAMI,MACbC,KAAML,EAAMK,KACZC,KAAMN,EAAMM,QAyEpB,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKC,GAAI,GAAT,SACI,cAAC,IAAD,CACIC,QAAQ,qEACRC,KAAK,gEAIjB,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAKC,OAAN,UACI,cAAC,IAAKC,MAAN,uBAEJ,eAAC,IAAKC,KAAN,CAAWC,UAAU,WAArB,UACI,cAAC,IAAD,CAAQC,QAAS,kBAAMhB,EAAkB,CAAEK,MAAO,GAAIE,KAAM,GAAID,KAAM,kBAAtE,mBACA,cAAC,IAAD,CACIW,QAAQ,UACRD,QAAS,kBAAMhB,EAAkB,CAAEK,MAAO,YAAaE,KAAM,UAAWD,KAAM,6BAFlF,qBAMA,cAAC,IAAD,CACIW,QAAQ,SACRD,QAAS,kBAAMhB,EAAkB,CAAEK,MAAO,YAAaE,KAAM,QAASD,KAAM,6BAFhF,mBAMA,cAAC,IAAD,CACIW,QAAQ,UACRD,QAAS,kBAAMhB,EAAkB,CAAEK,MAAO,YAAaE,KAAM,UAAWD,KAAM,6BAFlF,qBAMA,cAAC,IAAD,CACIW,QAAQ,OACRD,QAAS,kBAAMhB,EAAkB,CAAEK,MAAO,YAAaE,KAAM,OAAQD,KAAM,6BAF/E,kBAMA,cAAC,IAAD,CAAQU,QA/GJ,WACxB,IAAME,EAAShB,IAAiBC,KAChCe,EAAOd,KAAK,CACRC,MAAO,gBACPC,KAAM,qEACNC,KAAM,UACNY,iBAAiB,EACjBC,kBAAkB,IACnBC,MAAK,SAACC,GACL,OAAIA,EAAWC,MACJL,EAAOd,KAAK,GAAI,8CAA+C,WAE/Dc,EAAOd,KAAK,GAAI,+BAAgC,aAmG3C,qBACA,cAAC,IAAD,CAAQY,QA/FL,WACvB,IAAME,EAAShB,IAAiBC,KAChCe,EAAOd,KAAK,CACRE,KAAM,wBACNkB,MAAO,SACRH,MAAK,SAACI,GACL,OAAIA,EAAOF,MACAL,EAAOd,KAAK,GAAZ,qBAA8BqB,EAAOF,QAErCL,EAAOd,KAAK,WAAY,mBAAoB,aAsFvC,oBACA,cAAC,IAAD,CAAQY,QAlFP,WACrB,IAAME,EAAShB,IAAiBC,KAChCe,EAAOd,KAAK,CACRE,KAAM,8BACNkB,MAAO,OACPE,gBAAiB,CACbC,eAAgB,OAEpBP,kBAAkB,EAClBQ,kBAAmB,UACnBC,qBAAqB,EACrBC,WAAY,SAACC,GACT,OAAIA,EACOC,MAAM,0BAAD,OAA2BD,IAClCV,MAAK,SAACY,GACH,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASI,UAEnBC,OAAM,SAACC,GACJpC,IAAKqC,sBAAL,0BAA8CD,OAG/CrB,EAAOd,KAAK,WAAY,gBAAiB,UAGxDqC,kBAAmB,kBAAOtC,IAAKuC,eAChCrB,MAAK,SAACI,GACL,GAAIA,EAAOF,YAAgCoB,IAAvBlB,EAAOF,MAAMQ,MAC7B,OAAOb,EAAOd,KAAK,CACfC,MAAM,GAAD,OAAKoB,EAAOF,MAAMQ,MAAlB,aACLa,SAAUnB,EAAOF,MAAMsB,iBAkDf,iC,iCCjI5B,oCAgBeC,IAbM,SAACC,GAClB,OACI,cAAC,IAAMvC,SAAP,UACI,eAAC,IAAD,CAAOS,QAAQ,UAAf,UACK8B,EAAMrC,QACP,cAAC,IAAMsC,KAAP,CAAYC,KAAMF,EAAMpC,KAAMuC,OAAO,SAASnC,UAAU,cAAxD","file":"static/js/167.cf2c8d5d.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nconst AdvanceAlert = () => {\n    const sweetAlertHandler = (alert) => {\n        const MySwal = withReactContent(Swal);\n        MySwal.fire({\n            title: alert.title,\n            text: alert.text,\n            type: alert.type\n        });\n    };\n\n    const sweetConfirmHandler = () => {\n        const MySwal = withReactContent(Swal);\n        MySwal.fire({\n            title: 'Are you sure?',\n            text: 'Once deleted, you will not be able to recover this imaginary file!',\n            type: 'warning',\n            showCloseButton: true,\n            showCancelButton: true\n        }).then((willDelete) => {\n            if (willDelete.value) {\n                return MySwal.fire('', 'Poof! Your imaginary file has been deleted!', 'success');\n            } else {\n                return MySwal.fire('', 'Your imaginary file is safe!', 'error');\n            }\n        });\n    };\n\n    const sweetPromptHandler = () => {\n        const MySwal = withReactContent(Swal);\n        MySwal.fire({\n            text: 'Write something here:',\n            input: 'text'\n        }).then((result) => {\n            if (result.value) {\n                return MySwal.fire('', `You Typed: ${result.value}`);\n            } else {\n                return MySwal.fire('Invalid!', 'No message write', 'error');\n            }\n        });\n    };\n\n    const sweetAjaxHandler = () => {\n        const MySwal = withReactContent(Swal);\n        MySwal.fire({\n            text: 'Submit your Github username',\n            input: 'text',\n            inputAttributes: {\n                autocapitalize: 'off'\n            },\n            showCancelButton: true,\n            confirmButtonText: 'Look up',\n            showLoaderOnConfirm: true,\n            preConfirm: (login) => {\n                if (login) {\n                    return fetch(`//api.github.com/users/${login}`)\n                        .then((response) => {\n                            if (!response.ok) {\n                                throw new Error(response.statusText);\n                            }\n                            return response.json();\n                        })\n                        .catch((error) => {\n                            Swal.showValidationMessage(`Request failed: ${error}`);\n                        });\n                } else {\n                    return MySwal.fire('Invalid!', 'No name enter', 'error');\n                }\n            },\n            allowOutsideClick: () => !Swal.isLoading()\n        }).then((result) => {\n            if (result.value && result.value.login !== undefined) {\n                return MySwal.fire({\n                    title: `${result.value.login}'s avatar`,\n                    imageUrl: result.value.avatar_url\n                });\n            }\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://www.npmjs.com/package/sweetalert2-react-content\"\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title>Alerts</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"btn-page\">\n                            <Button onClick={() => sweetAlertHandler({ title: '', type: '', text: 'Hello World!' })}>Basic</Button>\n                            <Button\n                                variant=\"success\"\n                                onClick={() => sweetAlertHandler({ title: 'Good job!', type: 'success', text: 'You clicked the button!' })}\n                            >\n                                Success\n                            </Button>\n                            <Button\n                                variant=\"danger\"\n                                onClick={() => sweetAlertHandler({ title: 'Good job!', type: 'error', text: 'You clicked the button!' })}\n                            >\n                                Error\n                            </Button>\n                            <Button\n                                variant=\"warning\"\n                                onClick={() => sweetAlertHandler({ title: 'Good job!', type: 'warning', text: 'You clicked the button!' })}\n                            >\n                                Warning\n                            </Button>\n                            <Button\n                                variant=\"info\"\n                                onClick={() => sweetAlertHandler({ title: 'Good job!', type: 'info', text: 'You clicked the button!' })}\n                            >\n                                Info\n                            </Button>\n                            <Button onClick={sweetConfirmHandler}>Confirm</Button>\n                            <Button onClick={sweetPromptHandler}>Prompt</Button>\n                            <Button onClick={sweetAjaxHandler}>Ajax</Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default AdvanceAlert;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n"],"sourceRoot":""}