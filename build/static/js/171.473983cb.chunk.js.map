{"version":3,"sources":["views/ui-elements/advance/AdvancePNotify.js","components/Widgets/Statistic/Notification.js"],"names":["defaultPNotify","PNotify","notice","title","text","primaryPNotify","successPNotify","success","infoPNotify","info","errorPNotify","error","successDesktopPNotify","modules","Desktop","desktop","on","e","target","className","match","alert","errorDesktopPNotify","warningDesktopPNotify","infoDesktopPNotify","topLeftPNotify","window","stackTopLeft","dir1","dir2","firstpos1","firstpos2","push","stack","bottomLeftPNotify","stackBottomLeft","bottomRightPNotify","stackBottomRight","customLeftPNotify","stackCustomLeft","customBottomPNotify","stackCustomBottom","barTopPNotify","stackBarTop","spacing1","addClass","cornerClass","shadow","width","barBottomPNotify","stackBarBottom","noTitlePNotify","icon","richContentPNotify","titleTrusted","textTrusted","closeOnClickPNotify","hide","Buttons","closer","sticker","close","customButtonPNotify","Confirm","confirm","buttons","primary","click","update","type","History","history","callbackButtonPNotify","Callbacks","beforeInit","opts","replace","afterInit","beforeOpen","afterOpen","beforeClose","timerHide","afterClose","dynamicProgressButtonPNotify","percent","setTimeout","interval","setInterval","options","clearInterval","defaults","multiLinePNotify","prompt","promptMultiLine","promptValue","cancelClose","value","promptPNotify","confirmPNotify","stickeyPNotify","permanentPNotify","closerHover","stickerHover","AdvancePNotify","Fragment","sm","message","link","Header","Title","as","Body","responsive","size","variant","onClick","Text","Notification","props","Link","href"],"mappings":"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","file":"static/js/171.473983cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\nimport PNotify from 'pnotify/dist/es/PNotify';\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nfunction defaultPNotify() {\n    PNotify.notice({\n        title: 'Default Notice',\n        text: \"Check me out! I'm notice\"\n    });\n}\n\nfunction primaryPNotify() {\n    PNotify.notice({\n        title: 'Primary Notice',\n        text: \"Check me out! I'm notice\"\n    });\n}\n\nfunction successPNotify() {\n    PNotify.success({\n        title: 'Success Notice',\n        text: \"Check me out! I'm notice\"\n    });\n}\n\nfunction infoPNotify() {\n    PNotify.info({\n        title: 'Info Notice',\n        text: \"Check me out! I'm notice\"\n    });\n}\n\nfunction errorPNotify() {\n    PNotify.error({\n        title: 'Error Notice',\n        text: \"Check me out! I'm notice\"\n    });\n}\n\nfunction successDesktopPNotify() {\n    PNotify.success({\n        title: 'Success Desktop Notice',\n        text: \"I'm a success desktop notification, if you have given me a permission.\",\n        modules: {\n            Desktop: {\n                desktop: true\n            }\n        }\n    }).on('click', function (e) {\n        if (\n            e.target.className.match('ui-pnotify-sticker') ||\n            e.target.className.match('ui-pnotify-closer') ||\n            e.target.className.match('brighttheme-icon-sticker') ||\n            e.target.className.match('brighttheme-icon-closer')\n        ) {\n            return;\n        }\n        alert('Hey! You clicked the desktop notification!');\n    });\n}\n\nfunction errorDesktopPNotify() {\n    PNotify.error({\n        title: 'Error Desktop Notice',\n        text: \"I'm a error desktop notification, if you have given me a permission.\",\n        modules: {\n            Desktop: {\n                desktop: true\n            }\n        }\n    }).on('click', function (e) {\n        if (\n            e.target.className.match('ui-pnotify-sticker') ||\n            e.target.className.match('ui-pnotify-closer') ||\n            e.target.className.match('brighttheme-icon-sticker') ||\n            e.target.className.match('brighttheme-icon-closer')\n        ) {\n            return;\n        }\n        alert('Hey! You clicked the desktop notification!');\n    });\n}\n\nfunction warningDesktopPNotify() {\n    PNotify.notice({\n        title: 'Warning Desktop Notice',\n        text: \"I'm a warning desktop notification, if you have given me a permission.\",\n        modules: {\n            Desktop: {\n                desktop: true\n            }\n        }\n    }).on('click', function (e) {\n        if (\n            e.target.className.match('ui-pnotify-sticker') ||\n            e.target.className.match('ui-pnotify-closer') ||\n            e.target.className.match('brighttheme-icon-sticker') ||\n            e.target.className.match('brighttheme-icon-closer')\n        ) {\n            return;\n        }\n        alert('Hey! You clicked the desktop notification!');\n    });\n}\n\nfunction infoDesktopPNotify() {\n    PNotify.info({\n        title: 'Info Desktop Notice',\n        text: \"I'm a info desktop notification, if you have given me a permission.\",\n        modules: {\n            Desktop: {\n                desktop: true\n            }\n        }\n    }).on('click', function (e) {\n        if (\n            e.target.className.match('ui-pnotify-sticker') ||\n            e.target.className.match('ui-pnotify-closer') ||\n            e.target.className.match('brighttheme-icon-sticker') ||\n            e.target.className.match('brighttheme-icon-closer')\n        ) {\n            return;\n        }\n        alert('Hey! You clicked the desktop notification!');\n    });\n}\n\nfunction topLeftPNotify() {\n    if (typeof window.stackTopLeft === 'undefined') {\n        window.stackTopLeft = {\n            dir1: 'down',\n            dir2: 'right',\n            firstpos1: 25,\n            firstpos2: 25,\n            push: 'top'\n        };\n    }\n\n    PNotify.notice({\n        title: 'Over here',\n        text: \"Check me out. I'm in a different stack.\",\n        stack: window.stackTopLeft\n    });\n}\n\nfunction bottomLeftPNotify() {\n    if (typeof window.stackBottomLeft === 'undefined') {\n        window.stackBottomLeft = {\n            dir1: 'right',\n            dir2: 'up',\n            firstpos1: 25,\n            firstpos2: 25,\n            push: 'top'\n        };\n    }\n\n    PNotify.notice({\n        title: 'Over here',\n        text: \"Check me out. I'm in a different stack.\",\n        stack: window.stackBottomLeft\n    });\n}\n\nfunction bottomRightPNotify() {\n    if (typeof window.stackBottomRight === 'undefined') {\n        window.stackBottomRight = {\n            dir1: 'up',\n            dir2: 'left',\n            firstpos1: 25,\n            firstpos2: 25\n        };\n    }\n\n    PNotify.notice({\n        title: 'Over here',\n        text: \"Check me out. I'm in a different stack.\",\n        stack: window.stackBottomRight\n    });\n}\n\nfunction customLeftPNotify() {\n    if (typeof window.stackCustomLeft === 'undefined') {\n        window.stackCustomLeft = {\n            dir1: 'right',\n            dir2: 'down',\n            firstpos1: 200,\n            firstpos2: 200\n        };\n    }\n\n    PNotify.success({\n        title: 'Good News Everyone',\n        text: \"I've invented a device that bites shiny metal asses.\",\n        stack: window.stackCustomLeft\n    });\n}\n\nfunction customBottomPNotify() {\n    if (typeof window.stackCustomBottom === 'undefined') {\n        window.stackCustomBottom = {\n            dir1: 'left',\n            dir2: 'up',\n            firstpos1: 200,\n            firstpos2: 200\n        };\n    }\n\n    PNotify.success({\n        title: 'Good News Everyone',\n        text: \"I've invented a device that bites shiny metal asses.\",\n        stack: window.stackCustomBottom\n    });\n}\n\nfunction barTopPNotify() {\n    if (typeof window.stackBarTop === 'undefined') {\n        window.stackBarTop = {\n            dir1: 'down',\n            firstpos1: 0,\n            spacing1: 2,\n            push: 'top'\n        };\n    }\n\n    PNotify.info({\n        title: 'Breaking News',\n        text: 'Have you met Ted?',\n        addClass: 'stack-bar-top',\n        cornerClass: 'ui-pnotify-sharp',\n        shadow: false,\n        width: '100%',\n        stack: window.stackBarTop\n    });\n}\n\nfunction barBottomPNotify() {\n    if (typeof window.stackBarBottom === 'undefined') {\n        window.stackBarBottom = {\n            dir1: 'up',\n            firstpos1: 0,\n            spacing1: 2,\n            push: 'top'\n        };\n    }\n\n    PNotify.info({\n        title: 'Breaking News',\n        text: 'Have you met Ted?',\n        addClass: 'stack-bar-bottom',\n        cornerClass: 'ui-pnotify-sharp',\n        shadow: false,\n        width: '100%',\n        stack: window.stackBarBottom\n    });\n}\n\nfunction noTitlePNotify() {\n    PNotify.notice({\n        title: false,\n        text: \"Check me out! I'm a notice without title.\",\n        icon: false\n    });\n}\n\nfunction richContentPNotify() {\n    PNotify.notice({\n        title: '<b>Rich content notice</b>',\n        titleTrusted: true,\n        text:\n            \"Look at my beautiful <strong>strong</strong>, <a href='#' class='alert-link'>linked</a>, <em>emphasized</em>, and <u>underlined</u> text with <i class='icon-make-group' /> icon.\",\n        textTrusted: true\n    });\n}\n\nfunction closeOnClickPNotify() {\n    const notice = PNotify.notice({\n        title: 'Close on click',\n        text: 'Click me anywhere to dismiss me.',\n        hide: false,\n        icon: false,\n        modules: {\n            Buttons: {\n                closer: false,\n                sticker: false\n            }\n        }\n    });\n    notice.on('click', function () {\n        notice.close();\n    });\n}\n\nfunction customButtonPNotify() {\n    PNotify.notice({\n        title: 'Choose a Side',\n        text: 'You have three options to choose from.',\n        icon: 'fa fa-question-circle',\n        hide: false,\n        modules: {\n            Confirm: {\n                confirm: true,\n                buttons: [\n                    {\n                        text: 'Fries',\n                        primary: true,\n                        click: function (notice) {\n                            notice.update({\n                                title: \"You've Chosen a Side\",\n                                text: 'You want fries.',\n                                icon: true,\n                                type: 'error',\n                                hide: true,\n                                modules: {\n                                    Confirm: {\n                                        confirm: false\n                                    },\n                                    Buttons: {\n                                        closer: true,\n                                        sticker: true\n                                    }\n                                }\n                            });\n                        }\n                    },\n                    {\n                        text: 'Mash',\n                        click: function (notice) {\n                            notice.update({\n                                title: \"You've Chosen a Side\",\n                                text: 'You want mashed potatoes.',\n                                icon: true,\n                                type: 'info',\n                                hide: true,\n                                modules: {\n                                    Confirm: {\n                                        confirm: false\n                                    },\n                                    Buttons: {\n                                        closer: true,\n                                        sticker: true\n                                    }\n                                }\n                            });\n                        }\n                    },\n                    {\n                        text: 'Fruit',\n                        click: function (notice) {\n                            notice.update({\n                                title: \"You've Chosen a Side\",\n                                text: 'You want fruit.',\n                                icon: true,\n                                type: 'success',\n                                hide: true,\n                                modules: {\n                                    Confirm: {\n                                        confirm: false\n                                    },\n                                    Buttons: {\n                                        closer: true,\n                                        sticker: true\n                                    }\n                                }\n                            });\n                        }\n                    }\n                ]\n            },\n            Buttons: {\n                closer: false,\n                sticker: false\n            },\n            History: {\n                history: false\n            }\n        }\n    });\n}\n\nfunction callbackButtonPNotify() {\n    const dontAlert = function () {};\n    PNotify.notice({\n        title: \"I'm Here\",\n        text: \"I have a callback for each of my events. I'll call all my callbacks while I change states.\",\n        modules: {\n            Callbacks: {\n                beforeInit: function (opts) {\n                    dontAlert(\n                        \"I'm called before the notice initializes. I'm passed the options used to make the notice. I can modify them. Watch me replace the word callback with tire iron!\"\n                    );\n                    opts.text = opts.text.replace(/callback/g, 'tire iron');\n                },\n                afterInit: function (notice) {\n                    dontAlert(\n                        \"I'm called after the notice initializes. I'm passed the PNotify object for the current notice: \" +\n                            notice +\n                            \"\\n\\nThere are more callbacks you can assign, but this is the last notice you'll see. Check the code to see them all.\"\n                    );\n                },\n                beforeOpen: function (notice) {\n                    alert(\"I'm called before the notice opens. I'm passed the PNotify object for the current notice: \" + notice);\n                },\n                afterOpen: function (notice) {\n                    dontAlert(\"I'm called after the notice opens. I'm passed the PNotify object for the current notice: \" + notice);\n                },\n                beforeClose: function (notice, timerHide) {\n                    alert(\"I'm called before the notice closes. I'm passed the PNotify object for the current notice: \" + notice);\n                    dontAlert(\n                        'I also have an argument called timerHide, which is true if the notice was closed because the timer ran down. Value: ' +\n                            timerHide\n                    );\n                },\n                afterClose: function (notice, timerHide) {\n                    dontAlert(\"I'm called after the notice closes. I'm passed the PNotify object for the current notice: \" + notice);\n                    dontAlert(\n                        'I also have an argument called timerHide, which is true if the notice was closed because the timer ran down. Value: ' +\n                            timerHide\n                    );\n                }\n            }\n        }\n    });\n}\n\nfunction dynamicProgressButtonPNotify() {\n    let percent = 0;\n    const notice = PNotify.info({\n        text: 'Please Wait',\n        icon: 'fa fa-spinner fa-pulse',\n        hide: false,\n        shadow: false,\n        width: '200px',\n        modules: {\n            Buttons: {\n                closer: false,\n                sticker: false\n            }\n        }\n    });\n\n    setTimeout(function () {\n        notice.update({\n            title: false\n        });\n        const interval = setInterval(function () {\n            percent += 2;\n            const options = {\n                text: percent + '% complete.'\n            };\n            if (percent === 80) {\n                options.title = 'Almost There';\n            }\n            if (percent >= 100) {\n                window.clearInterval(interval);\n                options.title = 'Done!';\n                options.type = 'success';\n                options.hide = true;\n                options.icon = 'fa fa-check';\n                options.shadow = true;\n                options.width = PNotify.defaults.width;\n                options.modules = {\n                    Buttons: {\n                        closer: true,\n                        sticker: true\n                    }\n                };\n            }\n            notice.update(options);\n        }, 120);\n    }, 2000);\n}\n\nfunction multiLinePNotify() {\n    const notice = PNotify.notice({\n        title: 'Input Needed',\n        text: 'Write me a poem, please.',\n        icon: 'fa fa-question-circle',\n        hide: false,\n        modules: {\n            Confirm: {\n                prompt: true,\n                promptMultiLine: true,\n                promptValue: 'Roses are red,\\nViolets are blue,\\n'\n            },\n            Buttons: {\n                closer: false,\n                sticker: false\n            },\n            History: {\n                history: false\n            }\n        }\n    });\n    notice.on('pnotify.confirm', function (e) {\n        notice.cancelClose().update({\n            title: 'Your Poem',\n            text: e.value,\n            icon: true,\n            type: 'success',\n            hide: true,\n            modules: {\n                Confirm: {\n                    prompt: false\n                },\n                Buttons: {\n                    closer: true,\n                    sticker: true\n                }\n            }\n        });\n    });\n    notice.on('pnotify.cancel', function (e) {\n        notice.cancelClose().update({\n            title: \"You Don't Like Poetry\",\n            text: 'Roses are dead,\\nViolets are dead,\\nI suck at gardening.',\n            icon: true,\n            type: 'error',\n            hide: true,\n            modules: {\n                Confirm: {\n                    prompt: false\n                },\n                Buttons: {\n                    closer: true,\n                    sticker: true\n                }\n            }\n        });\n    });\n}\n\nfunction promptPNotify() {\n    const notice = PNotify.notice({\n        title: 'Input Needed',\n        text: 'What side would you like?',\n        icon: 'fa fa-question-circle',\n        hide: false,\n        modules: {\n            Confirm: {\n                prompt: true\n            },\n            Buttons: {\n                closer: false,\n                sticker: false\n            },\n            History: {\n                history: false\n            }\n        }\n    });\n    notice.on('pnotify.confirm', function (e) {\n        notice.cancelClose().update({\n            title: \"You've Chosen a Side\",\n            text: 'You want ' + e.value + '.',\n            icon: true,\n            type: 'success',\n            hide: true,\n            modules: {\n                Confirm: {\n                    prompt: false\n                },\n                Buttons: {\n                    closer: true,\n                    sticker: true\n                }\n            }\n        });\n    });\n    notice.on('pnotify.cancel', function (e) {\n        notice.cancelClose().update({\n            title: \"You Don't Want a Side\",\n            text: 'No soup for you!',\n            icon: true,\n            type: 'error',\n            hide: true,\n            modules: {\n                Confirm: {\n                    prompt: false\n                },\n                Buttons: {\n                    closer: true,\n                    sticker: true\n                }\n            }\n        });\n    });\n}\n\nfunction confirmPNotify() {\n    const notice = PNotify.notice({\n        title: 'Confirmation Needed',\n        text: 'Are you sure?',\n        icon: 'fa fa-question-circle',\n        hide: false,\n        modules: {\n            Confirm: {\n                confirm: true\n            },\n            Buttons: {\n                closer: false,\n                sticker: false\n            },\n            History: {\n                history: false\n            }\n        }\n    });\n    notice.on('pnotify.confirm', function () {\n        alert('Ok, cool.');\n    });\n    notice.on('pnotify.cancel', function () {\n        alert('Oh ok. Chicken, I see.');\n    });\n}\n\nfunction stickeyPNotify() {\n    PNotify.notice({\n        title: 'Sticky Notice',\n        text: \"Check me out! I'm a sticky notice. You'll have to close me yourself.\",\n        hide: false\n    });\n}\n\nfunction permanentPNotify() {\n    PNotify.notice({\n        title: 'Permanent Buttons Notice',\n        text: \"My buttons are really lonely, so they're gonna hang out with us.\",\n        modules: {\n            Buttons: {\n                closerHover: false,\n                stickerHover: false\n            }\n        }\n    });\n}\n\nconst AdvancePNotify = () => {\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://www.npmjs.com/package/pnotify\"\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Notification Alert</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Table responsive>\n                                <tbody>\n                                    <tr>\n                                        <td>Default Notice</td>\n                                        <td>\n                                            <Button size=\"sm\" variant=\"inverse\" onClick={defaultPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Use method <code>notice</code> with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Primary Notice</td>\n                                        <td>\n                                            <Button size=\"sm\" variant=\"primary\" onClick={primaryPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Use method <code>notice</code> with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Success Notice</td>\n                                        <td>\n                                            <Button size=\"sm\" variant=\"success\" onClick={successPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Use method <code>success</code> with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Info Notice</td>\n                                        <td>\n                                            <Button size=\"sm\" variant=\"info\" onClick={infoPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Use method <code>info</code> with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Error Notice</td>\n                                        <td>\n                                            <Button size=\"sm\" variant=\"danger\" onClick={errorPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Use method <code>error</code> with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Desktop Alert</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"btn-page\">\n                            <Card.Text>\n                                Use variant method from notification alert and set <code>option</code> like,{' '}\n                                <code>{'modules:{ Desktop: { desktop: true}}'}</code> with <code>PNotify</code>\n                            </Card.Text>\n                            <Button variant=\"success\" onClick={successDesktopPNotify}>\n                                <i className=\"feather icon-bell\" /> Click Here!\n                            </Button>\n                            <Button variant=\"info\" onClick={infoDesktopPNotify}>\n                                <i className=\"feather icon-bell\" /> Click Here!\n                            </Button>\n                            <Button variant=\"warning\" onClick={warningDesktopPNotify}>\n                                <i className=\"feather icon-bell\" /> Click Here!\n                            </Button>\n                            <Button variant=\"danger\" onClick={errorDesktopPNotify}>\n                                <i className=\"feather icon-bell\" /> Click Here!\n                            </Button>\n                        </Card.Body>\n                    </Card>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Notification Position</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Table responsive>\n                                <tbody>\n                                    <tr>\n                                        <td>Top Left</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={topLeftPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>\n                                                {\"stack:{'dir1': 'down', 'dir2': 'right', 'firstpos1': 25, 'firstpos2': 25, 'push': 'top'}\"}\n                                            </code>{' '}\n                                            with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Bottom Left</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={bottomLeftPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>\n                                                {\"stack:{'dir1': 'right', 'dir2': 'up', 'firstpos1': 25, 'firstpos2': 25, 'push': 'top'}\"}\n                                            </code>{' '}\n                                            with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Bottom Right</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={bottomRightPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>{\"stack:{'dir1': 'up', 'dir2': 'left', 'firstpos1': 25, 'firstpos2': 25}\"}</code> with{' '}\n                                            <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Custom Left</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={customLeftPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>{\"stack:{'dir1': 'right', 'dir2': 'down', 'firstpos1': 200, 'firstpos2': 200}\"}</code>{' '}\n                                            with <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Custom Right</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={customBottomPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>{\"stack:{'dir1': 'left', 'dir2': 'up', 'firstpos1': 200, 'firstpos2': 200}\"}</code> with{' '}\n                                            <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Custom Top</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={barTopPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>{\"stack:{'dir1': 'down', 'firstpos1': 0, 'spacing1': 2, 'push': 'top'}\"}</code> with{' '}\n                                            <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Custom Bottom</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={barBottomPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like,{' '}\n                                            <code>{\"stack:{'dir1': 'up', 'firstpos1': 0, 'spacing1': 2, 'push': 'top'}\"}</code> with{' '}\n                                            <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Notification Position</Card.Title>\n                        </Card.Header>\n                        <Card.Body>\n                            <Table responsive>\n                                <tbody>\n                                    <tr>\n                                        <td>No Title</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={noTitlePNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like, <code>{'title:false, icon: false'}</code> with{' '}\n                                            <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Rich Title/Content</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={richContentPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>option</code> like, <code>{'titleTrusted:true, textTrusted: true'}</code> with{' '}\n                                            <code>PNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Click to Close</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={closeOnClickPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>closeOnClickPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Custom Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={customButtonPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>customButtonPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Callback Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={callbackButtonPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>callbackButtonPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Dynamic Progress Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={dynamicProgressButtonPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>dynamicProgressButtonPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Multi Line Props</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={multiLinePNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>multiLinePNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Prompt Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={promptPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>promptPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Confirm Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={confirmPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>confirmPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Stickey Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={stickeyPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>stickeyPNotify</code>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>Permanent Button</td>\n                                        <td>\n                                            <Button size=\"sm\" onClick={permanentPNotify}>\n                                                <i className=\"feather icon-bell\" /> Click Here!\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            Set <code>function</code> like, <code>permanentPNotify</code>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default AdvancePNotify;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n"],"sourceRoot":""}