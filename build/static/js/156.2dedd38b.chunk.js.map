{"version":3,"sources":["views/charts/re-chart/chart/BarSimpleChart.js","views/charts/re-chart/chart/BarStackedChart.js","views/charts/re-chart/chart/AreaAngleChart.js","views/charts/re-chart/chart/AreaSmoothChart.js","views/charts/re-chart/chart/LineAngleChart.js","views/charts/re-chart/chart/LineSmoothChart.js","views/charts/re-chart/chart/PieBasicChart.js","views/charts/re-chart/chart/PieDonutChart.js","views/charts/re-chart/chart/ComboChart.js","views/charts/re-chart/index.js","components/Widgets/Statistic/Notification.js"],"names":["data","name","BarSimpleChart","Fragment","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fillOpacity","fill","BarStackedChart","stackId","AreaAngleChart","AreaChart","type","domain","Area","stroke","iphone","ipad","itouch","AreaSmoothChart","LineAngleChart","LineChart","Line","strokeWidth","LineSmoothChart","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","index","x","cos","y","sin","textAnchor","dominantBaseline","toFixed","PieBasicChart","PieChart","Pie","labelLine","label","map","entry","Cell","length","renderActiveShape","props","startAngle","endAngle","payload","sx","sy","mx","my","ex","ey","dy","style","fontSize","fontWeight","Sector","d","r","PieDonutChart","useState","activeIndex","setActiveIndex","activeShape","paddingAngle","onMouseEnter","pv","amt","ComboChart","ComposedChart","ReChart","Row","Col","sm","message","link","xl","Card","Header","Title","as","Body","className","Notification","variant","Link","href","target"],"mappings":"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","file":"static/js/156.2dedd38b.chunk.js","sourcesContent":["import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '2008',\n        'Bar 1': 50,\n        'Bar 2': 40,\n        'Bar 3': 35\n    },\n    {\n        name: '2009',\n        'Bar 1': 75,\n        'Bar 2': 65,\n        'Bar 3': 60\n    },\n    {\n        name: '2010',\n        'Bar 1': 50,\n        'Bar 2': 40,\n        'Bar 3': 55\n    },\n    {\n        name: '2011',\n        'Bar 1': 75,\n        'Bar 2': 65,\n        'Bar 3': 85\n    },\n    {\n        name: '2012',\n        'Bar 1': 100,\n        'Bar 2': 90,\n        'Bar 3': 40\n    }\n];\n\nconst BarSimpleChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <defs>\n                        <linearGradient id=\"colorBar1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#1de9b6\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#1dc4e9\" stopOpacity={1} />\n                        </linearGradient>\n                        <linearGradient id=\"colorBar2\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#899FD4\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#A389D4\" stopOpacity={1} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"Bar 1\" fillOpacity={1} fill=\"url(#colorBar1)\" />\n                    <Bar dataKey=\"Bar 2\" fillOpacity={1} fill=\"url(#colorBar2)\" />\n                    <Bar dataKey=\"Bar 3\" fill=\"#04a9f5\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default BarSimpleChart;\n","import React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '2008',\n        'Bar 1': 50,\n        'Bar 2': 40,\n        'Bar 3': 35\n    },\n    {\n        name: '2009',\n        'Bar 1': 75,\n        'Bar 2': 65,\n        'Bar 3': 60\n    },\n    {\n        name: '2010',\n        'Bar 1': 50,\n        'Bar 2': 40,\n        'Bar 3': 55\n    },\n    {\n        name: '2011',\n        'Bar 1': 75,\n        'Bar 2': 65,\n        'Bar 3': 85\n    },\n    {\n        name: '2012',\n        'Bar 1': 100,\n        'Bar 2': 90,\n        'Bar 3': 40\n    }\n];\n\nconst BarStackedChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <BarChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <defs>\n                        <linearGradient id=\"colorBar1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#1de9b6\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#1dc4e9\" stopOpacity={1} />\n                        </linearGradient>\n                        <linearGradient id=\"colorBar2\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#899FD4\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#A389D4\" stopOpacity={1} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Bar dataKey=\"Bar 1\" stackId=\"bar\" fillOpacity={1} fill=\"url(#colorBar1)\" />\n                    <Bar dataKey=\"Bar 2\" stackId=\"bar\" fillOpacity={1} fill=\"url(#colorBar2)\" />\n                    <Bar dataKey=\"Bar 3\" stackId=\"bar\" fill=\"#04a9f5\" />\n                </BarChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default BarStackedChart;\n","import React from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '2007',\n        'Bar 1': 0,\n        'Bar 2': 0,\n        'Bar 3': 35\n    },\n    {\n        name: '2008',\n        'Bar 1': 130,\n        'Bar 2': 100,\n        'Bar 3': 35\n    },\n    {\n        name: '2009',\n        'Bar 1': 80,\n        'Bar 2': 60,\n        'Bar 3': 60\n    },\n    {\n        name: '2010',\n        'Bar 1': 70,\n        'Bar 2': 200,\n        'Bar 3': 55\n    },\n    {\n        name: '2011',\n        'Bar 1': 220,\n        'Bar 2': 150,\n        'Bar 3': 85\n    },\n    {\n        name: '2012',\n        'Bar 1': 105,\n        'Bar 2': 90,\n        'Bar 3': 40\n    },\n    {\n        name: '2013',\n        'Bar 1': 250,\n        'Bar 2': 150,\n        'Bar 3': 40\n    }\n];\n\nconst AreaAngleChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <AreaChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                    <defs>\n                        <linearGradient id=\"colorBar1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#1de9b6\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#1dc4e9\" stopOpacity={1} />\n                        </linearGradient>\n                        <linearGradient id=\"colorBar2\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#899FD4\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#A389D4\" stopOpacity={1} />\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis type=\"number\" domain={[0, 'dataMax + 50']} />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area dataKey=\"Bar 1\" stroke=\"none\" fillOpacity={0.5} fill=\"url(#colorBar1)\" />\n                    <Area dataKey=\"Bar 2\" stroke=\"none\" fillOpacity={0.5} fill=\"url(#colorBar2)\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default AreaAngleChart;\n","import React from 'react';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '2010',\n        iphone: 0,\n        ipad: 0,\n        itouch: 0\n    },\n    {\n        name: '2011',\n        iphone: 50,\n        ipad: 15,\n        itouch: 5\n    },\n    {\n        name: '2012',\n        iphone: 20,\n        ipad: 50,\n        itouch: 65\n    },\n    {\n        name: '2013',\n        iphone: 60,\n        ipad: 12,\n        itouch: 7\n    },\n    {\n        name: '2014',\n        iphone: 30,\n        ipad: 20,\n        itouch: 120\n    },\n    {\n        name: '2015',\n        iphone: 25,\n        ipad: 80,\n        itouch: 40\n    },\n    {\n        name: '2016',\n        iphone: 10,\n        ipad: 10,\n        itouch: 10\n    }\n];\n\nconst AreaSmoothChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <AreaChart data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                    <defs>\n                        <linearGradient id=\"colorBar1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#1de9b6\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#1dc4e9\" stopOpacity={1} />\n                        </linearGradient>\n                        <linearGradient id=\"colorBar2\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#899FD4\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#A389D4\" stopOpacity={1} />\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"name\" />\n                    <YAxis type=\"number\" domain={[0, 'dataMax + 80']} />\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <Tooltip />\n                    <Area type=\"monotone\" dataKey=\"iphone\" stroke=\"none\" fillOpacity={0.8} fill=\"#A389D4\" />\n                    <Area type=\"monotone\" dataKey=\"ipad\" stroke=\"none\" fillOpacity={0.8} fill=\"#1de9b6\" />\n                    <Area type=\"monotone\" dataKey=\"itouch\" stroke=\"none\" fillOpacity={0.8} fill=\"#04a9f5\" />\n                </AreaChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default AreaSmoothChart;\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '2007',\n        'Series 1': 20,\n        'Series 2': 10\n    },\n    {\n        name: '2008',\n        'Series 1': 55,\n        'Series 2': 45\n    },\n    {\n        name: '2009',\n        'Series 1': 45,\n        'Series 2': 35\n    },\n    {\n        name: '2010',\n        'Series 1': 75,\n        'Series 2': 65\n    },\n    {\n        name: '2011',\n        'Series 1': 50,\n        'Series 2': 40\n    },\n    {\n        name: '2012',\n        'Series 1': 75,\n        'Series 2': 65\n    },\n    {\n        name: '2013',\n        'Series 1': 100,\n        'Series 2': 90\n    }\n];\n\nconst LineAngleChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart\n                    data={data}\n                    margin={{\n                        top: 20,\n                        right: 30,\n                        left: 20,\n                        bottom: 5\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis type=\"number\" />\n                    <Tooltip />\n                    <Legend />\n                    <Line dataKey=\"Series 1\" stroke=\"#1de9b6\" strokeWidth={3} />\n                    <Line dataKey=\"Series 2\" stroke=\"#04a9f5\" strokeWidth={3} />\n                </LineChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default LineAngleChart;\n","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    {\n        name: '2007',\n        'Series 1': 100,\n        'Series 2': 90\n    },\n    {\n        name: '2008',\n        'Series 1': 75,\n        'Series 2': 65\n    },\n    {\n        name: '2009',\n        'Series 1': 50,\n        'Series 2': 40\n    },\n    {\n        name: '2010',\n        'Series 1': 75,\n        'Series 2': 65\n    },\n    {\n        name: '2011',\n        'Series 1': 50,\n        'Series 2': 40\n    },\n    {\n        name: '2012',\n        'Series 1': 75,\n        'Series 2': 65\n    },\n    {\n        name: '2013',\n        'Series 1': 100,\n        'Series 2': 90\n    }\n];\n\nconst LineSmoothChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart\n                    data={data}\n                    margin={{\n                        top: 20,\n                        right: 30,\n                        left: 20,\n                        bottom: 5\n                    }}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis type=\"number\" />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"Series 1\" stroke=\"#1de9b6\" strokeWidth={3} />\n                    <Line type=\"monotone\" dataKey=\"Series 2\" stroke=\"#A389D4\" strokeWidth={3} />\n                </LineChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default LineSmoothChart;\n","import React from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    { name: 'Group A', value: 55 },\n    { name: 'Group B', value: 10 },\n    { name: 'Group C', value: 15 },\n    { name: 'Group D', value: 20 }\n];\n\nconst COLORS = ['#1de9b6', '#A389D4', '#04a9f5', '#1dc4e9'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n            {`${(percent * 100).toFixed(0)}%`}\n        </text>\n    );\n};\n\nconst PieBasicChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart>\n                    <Pie\n                        data={data}\n                        cx=\"auto\"\n                        cy=\"auto\"\n                        labelLine={false}\n                        label={renderCustomizedLabel}\n                        outerRadius={120}\n                        fill=\"#8884d8\"\n                        dataKey=\"value\"\n                    >\n                        {data.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                    </Pie>\n                </PieChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default PieBasicChart;\n","import React, { useState } from 'react';\nimport { PieChart, Pie, Cell, Tooltip, Sector, ResponsiveContainer } from 'recharts';\n\nconst data = [\n    { name: 'Data 1', value: 55 },\n    { name: 'Data 2', value: 10 },\n    { name: 'Data 3', value: 15 },\n    { name: 'Data 4', value: 20 }\n];\n\nconst COLORS = ['#1de9b6', '#A389D4', '#04a9f5', '#1dc4e9'];\n\nconst renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n\n    return (\n        <g>\n            <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill=\"#000\" style={{ fontSize: '16px', fontWeight: 600 }}>\n                {payload.name}\n                <tspan> val: {payload.value}</tspan>\n            </text>\n            <Sector\n                cx={cx}\n                cy={cy}\n                innerRadius={innerRadius}\n                outerRadius={outerRadius}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                fill={fill}\n            />\n            <Sector\n                cx={cx}\n                cy={cy}\n                startAngle={startAngle}\n                endAngle={endAngle}\n                innerRadius={outerRadius + 6}\n                outerRadius={outerRadius + 10}\n                fill={fill}\n            />\n            <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n            <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n            <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n                {`(Rate ${(percent * 100).toFixed(2)}%)`}\n            </text>\n        </g>\n    );\n};\n\nconst PieDonutChart = () => {\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const onPieEnter = (data, index) => {\n        setActiveIndex(index);\n    };\n\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart>\n                    <Pie\n                        data={data}\n                        activeIndex={activeIndex}\n                        activeShape={renderActiveShape}\n                        cx=\"auto\"\n                        cy=\"auto\"\n                        innerRadius={80}\n                        outerRadius={120}\n                        fill=\"#8884d8\"\n                        paddingAngle={2}\n                        dataKey=\"value\"\n                        onMouseEnter={onPieEnter}\n                    >\n                        <Tooltip />\n                        {data.map((entry, index) => (\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                    </Pie>\n                </PieChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default PieDonutChart;\n","import React from 'react';\nimport { ResponsiveContainer, ComposedChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst data = [\n    {\n        name: '2008',\n        'Bar 1': 50,\n        'Bar 2': 40,\n        'Bar 3': 35,\n        pv: 80,\n        amt: 140\n    },\n    {\n        name: '2009',\n        'Bar 1': 75,\n        'Bar 2': 65,\n        'Bar 3': 60,\n        pv: 96,\n        amt: 150\n    },\n    {\n        name: '2010',\n        'Bar 1': 50,\n        'Bar 2': 40,\n        'Bar 3': 55,\n        pv: 109,\n        amt: 98\n    },\n    {\n        name: '2011',\n        'Bar 1': 75,\n        'Bar 2': 65,\n        'Bar 3': 85,\n        pv: 120,\n        amt: 122\n    },\n    {\n        name: '2012',\n        'Bar 1': 100,\n        'Bar 2': 90,\n        'Bar 3': 40,\n        pv: 68,\n        amt: 170\n    },\n    {\n        name: '2013',\n        'Bar 1': 80,\n        'Bar 2': 85,\n        'Bar 3': 45,\n        pv: 90,\n        amt: 85\n    }\n];\n\nconst ComboChart = () => {\n    return (\n        <React.Fragment>\n            <ResponsiveContainer width=\"100%\" height={300}>\n                <ComposedChart\n                    data={data}\n                    margin={{\n                        top: 20,\n                        right: 20,\n                        bottom: 20,\n                        left: 20\n                    }}\n                >\n                    <defs>\n                        <linearGradient id=\"colorBar1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#1de9b6\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#1dc4e9\" stopOpacity={1} />\n                        </linearGradient>\n                        <linearGradient id=\"colorBar2\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                            <stop offset=\"1%\" stopColor=\"#899FD4\" stopOpacity={1} />\n                            <stop offset=\"99%\" stopColor=\"#A389D4\" stopOpacity={1} />\n                        </linearGradient>\n                    </defs>\n                    <CartesianGrid stroke=\"#f5f5f5\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Area type=\"monotone\" dataKey=\"amt\" fillOpacity={0.2} fill=\"url(#colorBar1)\" stroke=\"none\" />\n                    <Bar dataKey=\"Bar 1\" fill=\"#1de9b6\" />\n                    <Bar dataKey=\"Bar 2\" fill=\"#A389D4\" />\n                    <Bar dataKey=\"Bar 3\" fill=\"#04a9f5\" />\n                    <Line dataKey=\"pv\" stroke=\"#1dc4e9\" strokeWidth={5} />\n                </ComposedChart>\n            </ResponsiveContainer>\n        </React.Fragment>\n    );\n};\n\nexport default ComboChart;\n","import React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\nimport BarSimpleChart from './chart/BarSimpleChart';\nimport BarStackedChart from './chart/BarStackedChart';\nimport AreaAngleChart from './chart/AreaAngleChart';\nimport AreaSmoothChart from './chart/AreaSmoothChart';\nimport LineAngleChart from './chart/LineAngleChart';\nimport LineSmoothChart from './chart/LineSmoothChart';\nimport PieBasicChart from './chart/PieBasicChart';\nimport PieDonutChart from './chart/PieDonutChart';\nimport ComboChart from './chart/ComboChart';\n\nimport ModuleNotification from '../../../components/Widgets/Statistic/Notification';\n\nconst ReChart = () => {\n    return (\n        <React.Fragment>\n            <Row>\n                <Col sm={12}>\n                    <ModuleNotification\n                        message=\"For more info please check the components's official documentation\"\n                        link=\"https://recharts.org/en-US/examples\"\n                    />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Bar [ Simple ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <BarSimpleChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Bar [ Stacked ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <BarStackedChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Line [ Angle ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <AreaAngleChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Area [ Smooth ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <AreaSmoothChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Line [ Angle ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <LineAngleChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Line [ Smooth ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <LineSmoothChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Pie [ Basic ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <PieBasicChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Pie [ Donut ] Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <PieDonutChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Header>\n                            <Card.Title as=\"h5\">Combo Chart</Card.Title>\n                        </Card.Header>\n                        <Card.Body className=\"text-center\">\n                            <ComboChart />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default ReChart;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = (props) => {\n    return (\n        <React.Fragment>\n            <Alert variant=\"warning\">\n                {props.message}\n                <Alert.Link href={props.link} target=\"_blank\" className=\"float-right\">\n                    Demo & Documentation\n                </Alert.Link>\n            </Alert>\n        </React.Fragment>\n    );\n};\n\nexport default Notification;\n"],"sourceRoot":""}